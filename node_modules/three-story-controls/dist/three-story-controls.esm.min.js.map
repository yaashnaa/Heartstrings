{"version":3,"file":"three-story-controls.esm.min.js","sources":["../src/Damper.ts","../src/CameraRig.ts","../src/adaptors/BaseAdaptor.ts","../src/adaptors/KeyboardAdaptor.ts","../src/adaptors/PointerAdaptor.ts","../src/adaptors/ScrollAdaptor.ts","../src/adaptors/SwipeAdaptor.ts","../src/adaptors/WheelAdaptor.ts","../src/controlschemes/FreeMovementControls.ts","../src/controlschemes/ScrollControls.ts","../src/controlschemes/StoryPointsControls.ts","../src/controlschemes/PathPointsControls.ts","../src/controlschemes/ThreeDOFControls.ts","../node_modules/style-inject/dist/style-inject.es.js","../src/camerahelper/index.ts"],"sourcesContent":["export interface DamperValues {\n  /** A value to dampen, set to its initial state  */\n  [key: string]: number | null\n}\n\nexport interface DamperProps {\n  /**  Values to be dampened */\n  values: DamperValues\n  /** Multiplier used on each update to approach the target value, should be between 0 and 1, where 1 is no damping */\n  dampingFactor: number\n  /** Amount of permitted error before a value is considered to have 'reached' its target. Defaults to 0.001 */\n  epsilon?: number\n}\n\n/**\n * Damper uses simple linear damping for a given collection of values.\n * On every call to update, the damper will approach a given set of target values.\n * @example\n * ```js\n * const damper = new Damper({\n *  values: {x: 0, y: 0},\n *  dampingFactor: 0.4\n * })\n *\n * damper.setTarget({ x: 1, y: 100 })\n * damper.update() // would generally be called in an animation loop\n * const values = damper.getCurrentValues() // values.x = 0.4; values.y = 40\n * ```\n */\n\nexport class Damper {\n  private dampingFactor: number\n  private epsilon = 0.001\n  private values: DamperValues = {}\n  private targetValues: DamperValues = {}\n  private deltaValues: DamperValues = {}\n  private hasReached: boolean\n\n  constructor(props: DamperProps) {\n    Object.assign(this.values, props.values)\n    Object.assign(this.targetValues, props.values)\n    this.deltaValues = {}\n    for (const key in this.values) {\n      this.deltaValues[key] = 0\n    }\n    this.dampingFactor = props.dampingFactor\n    if (props.epsilon) this.epsilon = props.epsilon\n    this.hasReached = true\n  }\n\n  /**\n   * Update the damper, should generally be called on every frame\n   */\n  update(): void {\n    const deltas = {}\n    let approached = true\n\n    for (const key in this.values) {\n      deltas[key] = this.targetValues[key] - this.values[key]\n      approached = approached && Math.abs(deltas[key]) < this.epsilon\n    }\n\n    if (approached) {\n      for (const key in this.values) {\n        this.deltaValues[key] = deltas[key]\n        this.values[key] = this.targetValues[key]\n      }\n      this.hasReached = true\n    } else {\n      for (const key in this.values) {\n        this.deltaValues[key] = this.dampingFactor * deltas[key]\n        this.values[key] += this.deltaValues[key]\n      }\n    }\n  }\n\n  /**\n   * Set the target values the damper needs to approach\n   * @param target DamperValues the damper needs to approach\n   */\n  setTarget(target: DamperValues): void {\n    for (const key in target) {\n      this.targetValues[key] = target[key]\n    }\n    this.hasReached = false\n  }\n\n  /**\n   * Increment/Decrement a specifc damper target value\n   * @param key The key of the value to modify\n   * @param value The amount to modify the target by\n   */\n  addToTarget(key: string, value: number): void {\n    this.targetValues[key] += value\n    this.hasReached = false\n  }\n\n  /**\n   * Reset all damper values to the fiven number\n   * @param value Number to reset all damper values to\n   */\n  resetAll(value: number): void {\n    for (const key in this.values) {\n      this.targetValues[key] = value\n      this.values[key] = value\n      this.deltaValues[key] = 0\n    }\n    this.hasReached = true\n  }\n\n  /**\n   * Reset damper values as described by the given DamperValues object\n   * @param values DamperValues object to reset the damper to\n   */\n  resetData(values: DamperValues): void {\n    for (const key in values) {\n      this.targetValues[key] = values[key]\n      this.values[key] = values[key]\n      this.deltaValues[key] = 0\n    }\n    this.hasReached = true\n  }\n\n  /**\n   * Get the current values\n   * @returns DamperValues object with the current values of the damper\n   */\n  getCurrentValues(): DamperValues {\n    return { ...this.values }\n  }\n\n  /**\n   * Get the change in values since the last update call\n   * @returns DamperValues object with the amount the values changed since the last `update()` call\n   */\n  getDeltaValues(): DamperValues {\n    return { ...this.deltaValues }\n  }\n\n  /**\n   * Whether the damper has reached its target\n   * @returns Whether the damper has reached its target (within permissible error range)\n   */\n  reachedTarget(): boolean {\n    return this.hasReached\n  }\n}\n","import {\n  Vector3,\n  Quaternion,\n  Object3D,\n  Camera,\n  PerspectiveCamera,\n  Scene,\n  AnimationMixer,\n  AnimationClip,\n  EventDispatcher,\n  Euler,\n} from 'three'\n\nimport gsap from 'gsap'\n\n/**\n * Event: Fired when CameraRig starts a transition\n * @example\n * ```javascript\n * rig.addEventListener('CameraMoveStart', handlerFunction)\n * ```\n * */\nexport interface CameraMoveStartEvent {\n  type: 'CameraMoveStart'\n}\n\n/**\n * Event: Fired on every tick of CameraRig's transition\n * @example\n * ```javascript\n * rig.addEventListener('CameraMoveUpdate', handlerFunction)\n * ```\n * */\nexport interface CameraMoveUpdateEvent {\n  type: 'CameraMoveUpdate'\n  /** Percentage of transition completed, between 0 and 1. */\n  progress: number\n}\n\n/**\n * Event: Fired when CameraRig ends a transition\n * @example\n * ```javascript\n * rig.addEventListener('CameraMoveEnd', handlerFunction)\n * ```\n * */\nexport interface CameraMoveEndEvent {\n  type: 'CameraMoveEnd'\n}\n\n/**\n * Enum of camera actions used to control a {@link three-story-controls#CameraRig}\n */\nexport enum CameraAction {\n  Pan = 'Pan',\n  Tilt = 'Tilt',\n  Roll = 'Roll',\n  Truck = 'Truck',\n  Pedestal = 'Pedestal',\n  Dolly = 'Dolly',\n  Zoom = 'Zoom',\n}\n\n/**\n * Enum of {@link three-story-controls#CameraRig} parts\n */\nexport enum RigComponent {\n  Body = 'body',\n  Head = 'head',\n  Eyes = 'eyes',\n}\n\n/**\n * Enum of axes\n */\nexport enum Axis {\n  X = 'x',\n  Y = 'y',\n  Z = 'z',\n}\n\n/**\n * Describe whether rig should translate along current rotation in each action axis\n */\nexport interface TranslateGuide {\n  [CameraAction.Pan]: boolean\n  [CameraAction.Tilt]: boolean\n  [CameraAction.Roll]: boolean\n}\n\n/**\n * Mapping of rotation action to axis\n */\nexport interface ActionAxes {\n  [CameraAction.Pan]: Axis\n  [CameraAction.Tilt]: Axis\n  [CameraAction.Roll]: Axis\n}\n\nconst AxisVector = {\n  [Axis.X]: new Vector3(1, 0, 0),\n  [Axis.Y]: new Vector3(0, 1, 0),\n  [Axis.Z]: new Vector3(0, 0, 1),\n}\n\nconst ActionMappingByUpAxis = {\n  [Axis.X]: {\n    [CameraAction.Pan]: Axis.X,\n    [CameraAction.Tilt]: Axis.Z,\n    [CameraAction.Roll]: Axis.Y,\n  },\n  [Axis.Y]: {\n    [CameraAction.Pan]: Axis.Y,\n    [CameraAction.Tilt]: Axis.X,\n    [CameraAction.Roll]: Axis.Z,\n  },\n  [Axis.Z]: {\n    [CameraAction.Pan]: Axis.Z,\n    [CameraAction.Tilt]: Axis.Y,\n    [CameraAction.Roll]: Axis.X,\n  },\n}\n\n/**\n * The CameraRig holds the camera, and can respond to {@link three-story-controls#CameraAction}s such as Pan/Tilt/Dolly etc. It can also be controlled along a given path (in the form of an `AnimationClip`), or tweened to specified points.\n *\n * @remarks\n * The rig is constructed of three objects, analagous to a body, head and eyes. The camera is nested in the eyes and is never transformed directly.\n *\n * Instead of specifying the axis to rotate/translate the camera, {@link three-story-controls#CameraAction}s are used. The rotation order of actions is always `Pan` then `Tilt` then `Roll`.\n * The mapping of these actions to axes depends on the up axis, which defaults to `Y` (but can be changed with the {@link CameraRig.setUpAxis | setUpAxis() method}):\n *\n * * `CameraAction.Pan` rotates around the `Y` axis\n *\n * * `CameraAction.Tilt` rotates around the `X` axis\n *\n * * `CameraAction.Roll` rotates around the `Z` axis\n *\n * * `CameraAction.Dolly` translates on the `Z` axis\n *\n * * `CameraAction.Truck` translates on the `X` axis\n *\n * * `CameraAction.Pedestal` translates on the `Y` axis\n *\n * Translations will be applied to the 'body' of the rig, and rotations to the 'eyes'. If an animation clip is provided, or the camera is tweened to a specific location,\n * the rotations will be applied to the 'head', thus leaving the 'eyes' free to 'look around' from this base position.\n *\n * Additionally, the default setup assumes that the rig will move forward/backward (`Dolly`) in the direction the camera is panned to.\n * This can be configured through {@link CameraRig.translateAlong | translateAlong property}.\n * It can also be overwritten by providing the component name to the {@link CameraRig.do | do() method}, see {@link https://github.com/nytimes/three-story-controls/blob/main/src/controlschemes/ThreeDOFControls.ts#L96 | ThreeDOFControls implementation} for an example.\n *\n * To move the rig along a specified path, use the {@link CameraRig.setAnimationClip | setAnimationClip() method},\n *  and set the names for the `Translation` and `Rotation` objects to match those of the clip. The clip should have a `VectorKeyframeTrack` for the outer position/translation object,\n *  and a `QuaternionKeyframeTrack` for the inner orientation/rotation object.\n *\n * See {@link three-story-controls#CameraMoveStartEvent}, {@link three-story-controls#CameraMoveUpdateEvent} and {@link three-story-controls#CameraMoveEndEvent} for emitted event signatures.\n */\nexport class CameraRig extends EventDispatcher {\n  readonly camera: Camera\n  readonly scene: Scene\n  private body: Object3D\n  private head: Object3D\n  private eyes: Object3D\n  private cameraIsInRig: boolean\n  private inTransit = false\n  private upAxis: Axis = Axis.Y\n  private actionAxes: ActionAxes = ActionMappingByUpAxis[this.upAxis]\n  private hasAnimation = false\n  private animationClip: AnimationClip\n  private mixer: AnimationMixer\n  private animationTranslationObjectName = 'Translation'\n  private animationRotationObjectName = 'Rotation'\n\n  public translateAlong: TranslateGuide = {\n    [CameraAction.Tilt]: false,\n    [CameraAction.Pan]: true,\n    [CameraAction.Roll]: false,\n  }\n\n  // Constructor\n  constructor(camera: Camera, scene: Scene) {\n    super()\n    this.camera = camera\n    this.scene = scene\n    this.body = new Object3D()\n    this.head = new Object3D()\n    this.eyes = new Object3D()\n    this.head.name = this.animationRotationObjectName\n    this.body.name = this.animationTranslationObjectName\n    this.body.rotation.order = this.getRotationOrder()\n    this.head.rotation.order = this.getRotationOrder()\n    this.eyes.rotation.order = this.getRotationOrder()\n    this.scene.add(this.body.add(this.head.add(this.eyes.add(this.camera))))\n    this.cameraIsInRig = true\n    this.unpackTransform()\n  }\n\n  /**\n   * Get the axis for a given action\n   * @param action\n   * @returns x | y | z\n   */\n  getAxisFor(action: CameraAction): string {\n    return this.actionAxes[action]\n  }\n\n  /**\n   * Get the axis' vector for a given action\n   * @param action\n   * @returns Normalized vector for the axis\n   */\n  getAxisVectorFor(action: CameraAction): Vector3 {\n    return AxisVector[this.actionAxes[action]]\n  }\n\n  /**\n   * Main method for controlling the camera\n   * @param action - Action to perform\n   * @param amount - Amount to move/rotate/etc\n   * @param rigComponent - Override the default component to perform the action on\n   */\n  do(action: CameraAction, amount: number, rigComponent?: RigComponent): void {\n    const targetComponent = this[rigComponent]\n\n    switch (action) {\n      case CameraAction.Pan:\n      case CameraAction.Tilt:\n      case CameraAction.Roll: {\n        const axis = this.getAxisVectorFor(action)\n        if (targetComponent) {\n          targetComponent.rotateOnAxis(axis, amount)\n        } else if (this.translateAlong[action]) {\n          this.body.rotateOnAxis(axis, amount)\n        } else {\n          this.eyes.rotateOnAxis(axis, amount)\n        }\n        break\n      }\n\n      case CameraAction.Truck: {\n        const axis = this.getAxisVectorFor(CameraAction.Tilt)\n        const component = targetComponent || this.body\n        component.translateOnAxis(axis, amount)\n        break\n      }\n\n      case CameraAction.Pedestal: {\n        const axis = this.getAxisVectorFor(CameraAction.Pan)\n        const component = targetComponent || this.body\n        component.translateOnAxis(axis, amount)\n        break\n      }\n\n      case CameraAction.Dolly: {\n        const axis = this.getAxisVectorFor(CameraAction.Roll)\n        const component = targetComponent || this.body\n        component.translateOnAxis(axis, amount)\n        break\n      }\n\n      case CameraAction.Zoom: {\n        if (this.camera instanceof PerspectiveCamera) {\n          this.camera.fov = amount\n          this.camera.updateProjectionMatrix()\n        }\n        break\n      }\n\n      default:\n        break\n    }\n  }\n\n  /**\n   * Get world position and orientation of the camera\n   */\n  getWorldCoordinates(): { position: Vector3; quaternion: Quaternion } {\n    const position = new Vector3()\n    this.camera.getWorldPosition(position)\n    const quaternion = new Quaternion()\n    this.camera.getWorldQuaternion(quaternion)\n    return { position, quaternion }\n  }\n\n  /**\n   * Sets world coordinates for the camera, and configures rig component transforms accordingly.\n   * @param param0\n   */\n  setWorldCoordinates({ position, quaternion }: { position: Vector3; quaternion: Quaternion }): void {\n    const currentRotation = new Euler().setFromQuaternion(quaternion, this.getRotationOrder())\n    const actions = [CameraAction.Pan, CameraAction.Tilt, CameraAction.Roll]\n    this.eyes.position.set(0, 0, 0)\n    this.eyes.rotation.set(0, 0, 0)\n    this.head.position.set(0, 0, 0)\n    this.head.rotation.set(0, 0, 0)\n    this.body.position.copy(position)\n    actions.forEach((action) => {\n      const axis = this.getAxisFor(action)\n      if (this.translateAlong[action]) {\n        this.body.rotation[axis] = currentRotation[axis]\n      } else {\n        this.eyes.rotation[axis] = currentRotation[axis]\n      }\n    })\n    this.camera.rotation.set(0, 0, 0)\n    this.camera.position.set(0, 0, 0)\n  }\n\n  /**\n   * Packs transfrom into the body and head, and 0s out transforms of the eyes. Useful for preparing the\n   * rig for control through an animation clip.\n   */\n  packTransform(): void {\n    const { position, quaternion } = this.getWorldCoordinates()\n    this.body.position.copy(position)\n    this.body.rotation.set(0, 0, 0)\n    this.head.quaternion.copy(quaternion)\n    this.head.position.set(0, 0, 0)\n    this.eyes.position.set(0, 0, 0)\n    this.eyes.rotation.set(0, 0, 0)\n  }\n\n  /**\n   * Unpacks the current camera world coordinates and distributes transforms\n   * across the rig componenets.\n   */\n  unpackTransform(): void {\n    const { position, quaternion } = this.getWorldCoordinates()\n    this.setWorldCoordinates({ position, quaternion })\n  }\n\n  /**\n   * Disassemble the camera from the rig and attach it to the scene.\n   */\n  disassemble(): void {\n    if (this.cameraIsInRig) {\n      this.scene.attach(this.camera)\n      this.cameraIsInRig = false\n    }\n  }\n\n  /**\n   * Place the camera back in the rig\n   */\n  assemble(): void {\n    if (!this.cameraIsInRig) {\n      this.eyes.attach(this.camera)\n      this.unpackTransform()\n      this.cameraIsInRig = true\n    }\n  }\n\n  /**\n   * Get the rotation order as a string compatible with what three.js uses\n   */\n  getRotationOrder(): string {\n    return Object.values(this.actionAxes).join('').toUpperCase()\n  }\n\n  /**\n   * Whether the camera is currently attached to the rig\n   */\n  isInRig(): boolean {\n    return this.cameraIsInRig\n  }\n\n  /**\n   * If the camera is in the middle of a transition\n   */\n  isMoving(): boolean {\n    return this.inTransit\n  }\n\n  /**\n   * Set the up axis for the camera\n   * @param axis - New Up axis\n   */\n  setUpAxis(axis: Axis): void {\n    this.upAxis = axis\n    this.actionAxes = ActionMappingByUpAxis[this.upAxis]\n    this.body.rotation.order = this.getRotationOrder()\n  }\n\n  /**\n   * Set an animation clip for the rig\n   * @param {AnimationClip} clip - AnimationClip containing a VectorKeyFrameTrack for position and a QuaternionKeyFrameTrack for rotation\n   * @param {string} translationObjectName - Name of translation object\n   * @param {string} rotationObjectName -  Name of rotation object\n   */\n  setAnimationClip(clip: AnimationClip, translationObjectName?: string, rotationObjectName?: string): void {\n    this.animationClip = clip\n    if (translationObjectName) this.animationTranslationObjectName = translationObjectName\n    if (rotationObjectName) this.animationRotationObjectName = rotationObjectName\n    this.hasAnimation = true\n    // hack. threejs skips last frame when seek time = clip duration\n    this.animationClip.duration += 0.01\n    this.mixer = new AnimationMixer(this.body)\n    const action = this.mixer.clipAction(this.animationClip)\n    action.clampWhenFinished = true\n    action.play()\n  }\n\n  /**\n   * Transition to a specific position and orientation in world space.\n   * Transform on eyes will be reset to 0 as a result of this.\n   * @param position\n   * @param quaternion\n   * @param duration\n   * @param ease\n   * @param useSlerp\n   */\n  flyTo(position: Vector3, quaternion: Quaternion, duration = 1, ease = 'power1', useSlerp = true): void {\n    if (!this.isMoving()) {\n      const currentCoords = this.getWorldCoordinates()\n      const currentValues = {\n        px: currentCoords.position.x,\n        py: currentCoords.position.y,\n        pz: currentCoords.position.z,\n        qx: currentCoords.quaternion.x,\n        qy: currentCoords.quaternion.y,\n        qz: currentCoords.quaternion.z,\n        qw: currentCoords.quaternion.w,\n        slerpAmt: 0,\n      }\n      const targetValues = {\n        px: position.x,\n        py: position.y,\n        pz: position.z,\n        qx: quaternion.x,\n        qy: quaternion.y,\n        qz: quaternion.z,\n        qw: quaternion.w,\n        slerpAmt: 1,\n      }\n      const tempQuaternion = new Quaternion()\n      const startQuaternion = new Quaternion(currentValues.qx, currentValues.qy, currentValues.qz, currentValues.qw)\n      const onStart = (): void => {\n        this.inTransit = true\n        this.packTransform()\n        this.dispatchEvent({ type: 'CameraMoveStart' } as CameraMoveStartEvent)\n      }\n      const onUpdate = (tween): void => {\n        this.body.position.set(currentValues.px, currentValues.py, currentValues.pz)\n        if (useSlerp) {\n          tempQuaternion.slerpQuaternions(startQuaternion, quaternion, currentValues.slerpAmt)\n          this.head.setRotationFromQuaternion(tempQuaternion)\n        } else {\n          this.head.quaternion.set(currentValues.qx, currentValues.qy, currentValues.qz, currentValues.qw)\n        }\n        this.dispatchEvent({\n          type: 'CameraMoveUpdate',\n          progress: tween.progress(),\n        } as CameraMoveUpdateEvent)\n      }\n      const onComplete = (): void => {\n        this.inTransit = false\n        this.unpackTransform()\n        this.dispatchEvent({ type: 'CameraMoveEnd' } as CameraMoveEndEvent)\n      }\n      gsap.to(currentValues, {\n        duration,\n        ease,\n        ...targetValues,\n        onStart,\n        onUpdate: function () {\n          onUpdate(this)\n        },\n        onComplete,\n      })\n    }\n  }\n\n  /**\n   * Transition to a specific keyframe on the animation clip\n   * Transform on eyes will be reset to 0 as a result of this.\n   * @param frame - frame\n   * @param duration - duration\n   * @param ease - ease\n   */\n  flyToKeyframe(frame: number, duration = 1, ease = 'power1'): void {\n    if (this.hasAnimation && !this.isMoving()) {\n      const currentValues = {\n        time: this.mixer.time,\n      }\n      const targetValues = {\n        time: this.animationClip.tracks[0].times[frame],\n      }\n      const onStart = (): void => {\n        this.inTransit = true\n        this.dispatchEvent({ type: 'CameraMoveStart' } as CameraMoveStartEvent)\n      }\n      const onUpdate = (tween): void => {\n        this.mixer.setTime(currentValues.time)\n        this.dispatchEvent({\n          type: 'CameraMoveUpdate',\n          progress: tween.progress(),\n        } as CameraMoveUpdateEvent)\n      }\n      const onComplete = (): void => {\n        this.inTransit = false\n        this.dispatchEvent({ type: 'CameraMoveEnd' } as CameraMoveEndEvent)\n      }\n      gsap.to(currentValues, {\n        duration,\n        ease,\n        ...targetValues,\n        onStart,\n        onUpdate: function () {\n          onUpdate(this)\n        },\n        onComplete,\n      })\n    }\n  }\n\n  /**\n   * @param percentage - percentage of animation clip to move to, between 0 and 1\n   */\n  setAnimationPercentage(percentage: number): void {\n    if (this.hasAnimation) {\n      const percent = Math.max(\n        0,\n        Math.min(percentage * this.animationClip.duration, this.animationClip.duration - 0.0001),\n      )\n      this.mixer.setTime(percent)\n    }\n  }\n\n  /**\n   * @param time - timestamp of animation clip to move to\n   */\n  setAnimationTime(time: number): void {\n    if (this.hasAnimation) this.mixer.setTime(time)\n  }\n\n  /**\n   * @param frame - frame of animation clip to move to\n   */\n  setAnimationKeyframe(frame: number): void {\n    if (this.hasAnimation) this.mixer.setTime(this.animationClip.tracks[0].times[frame])\n  }\n}\n","import { EventDispatcher } from 'three'\n\nexport abstract class BaseAdaptor extends EventDispatcher {\n  constructor() {\n    super()\n  }\n  abstract connect(): void\n  abstract disconnect(): void\n  abstract update(time?: number): void\n  abstract isEnabled(): boolean\n}\n\nexport interface DiscreteEvent {\n  type: 'trigger'\n}\n\nexport interface ContinuousEvent {\n  type: 'update'\n}\n\nexport interface IntertiaCompleteEvent {\n  type: 'inertiacomplete'\n}\n","import { BaseAdaptor, DiscreteEvent, ContinuousEvent, IntertiaCompleteEvent } from './BaseAdaptor'\nimport { Damper, DamperValues } from '../Damper'\n\n/**\n * Event: Fired when a key in a `discrete` KeyboardAdaptor's mapping is released (`onKeyUp`)\n * @example\n * ```javascript\n * adaptor.on('trigger', () => { // do something })\n * ```\n * */\nexport interface KeyboardAdaptorDiscreteEvent extends DiscreteEvent {\n  /** KeyMapping key that triggered the event */\n  trigger: string\n}\n\n/**\n * Event: Fired when a key in a `continuous` KeyboardAdaptor's mapping is pressed (`onKeyDown`)\n * @example\n * ```javascript\n * adaptor.on('update', () => { // do something })\n * ```\n * */\nexport interface KeyboardAdaptorContinuousEvent extends ContinuousEvent {\n  values: DamperValues\n  deltas: DamperValues\n}\n\n/**\n * A discrete adaptor works as a trigger - only firing events on keyup,\n * whereas a continuous adaptor continuously fires events on keydown\n * */\nexport type KeyboardAdaptorType = 'discrete' | 'continuous'\n\n/**\n * Key-value pairs of semantic labels associated with an array of keys (corresponding to `KeybordEvent.keys` values)\n */\nexport interface KeyMapping {\n  /** The key is a semantic label, and the string[] is a corresponding collection of event.keys */\n  [key: string]: string[]\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#KeyboardAdaptor} constructor\n */\nexport interface KeyboardAdaptorProps {\n  /** 'discrete' or 'continuous' */\n  type: KeyboardAdaptorType\n  /**\n   * Default key mapping uses forward/backward/up/down/left/right as semanic labels, with WASD and arrow keys mapped appropriately:\n   * @example keyMapping\n   * ```javascript\n   * {\n   *   forward: ['ArrowUp', 'w', 'W'],\n   *   backward: ['ArrowDown', 's', 'S'],\n   *   left: ['ArrowLeft', 'a', 'A'],\n   *   right: ['ArrowRight', 'd', 'D'],\n   *   up: ['u', 'U'],\n   *   down: ['n', 'N'],\n   * }\n   * ```\n   * */\n  keyMapping?: KeyMapping\n  /** Only used for continuous adaptor, value between 0 and 1. Defaults to 0.5 */\n  dampingFactor?: number\n  /** Only used for continuous adaptor, the amount to increment the target value on each keydown event. Defaults to 1 */\n  incrementor?: number\n  /** Prevent event bubbling. Defaults to true */\n  preventBubbling?: boolean\n}\n\nconst defaultProps: Partial<KeyboardAdaptorProps> = {\n  keyMapping: {\n    forward: ['ArrowUp', 'w', 'W'],\n    backward: ['ArrowDown', 's', 'S'],\n    left: ['ArrowLeft', 'a', 'A'],\n    right: ['ArrowRight', 'd', 'D'],\n    up: ['u', 'U'],\n    down: ['n', 'N'],\n  },\n  dampingFactor: 0.5,\n  incrementor: 1,\n  preventBubbling: true,\n}\n\n/**\n * Parse keyboard events and emit either dampened values for continuous keypresses, or trigger events named according to a provided keymapping.\n * @remarks\n * See {@link three-story-controls#KeyboardAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#KeyboardAdaptorDiscreteEvent} and {@link three-story-controls#KeyboardAdaptorContinuousEvent} for emitted event signatures.\n * @example Continuous adaptor\n * ```javascript\n * const keyboardAdaptor = new KeyboardAdaptor({ type: 'continuous', dampingFactor: 0.2 })\n * keyboardAdaptor.connect()\n * keyboardAdaptor.addEventListener('update', (event) => {\n *   cube.rotation.y += event.deltas.right - event.deltas.left\n *   cube.rotation.x += event.deltas.up - event.deltas.down\n * )}\n * function animate() {\n *  keyboardAdaptor.update()\n *  window.requestAnimationFrame(animate)\n * }\n * animate()\n * ```\n */\nexport class KeyboardAdaptor extends BaseAdaptor {\n  private type: KeyboardAdaptorType\n  private damper: Damper\n  private dampingFactor: number\n  private incrementor: number\n  private keyMapping: KeyMapping\n  private connected: boolean\n  private preventBubbling: boolean\n\n  constructor(props: KeyboardAdaptorProps) {\n    super()\n    Object.assign(this, defaultProps, props)\n    const values = {}\n    for (const key in this.keyMapping) {\n      values[key] = 0\n    }\n    this.damper = new Damper({\n      values,\n      dampingFactor: this.dampingFactor,\n    })\n    this.onKeyUp = this.onKeyUp.bind(this)\n    this.onKeyDown = this.onKeyDown.bind(this)\n  }\n\n  connect(): void {\n    document.addEventListener('keyup', this.onKeyUp, true)\n    document.addEventListener('keydown', this.onKeyDown, true)\n    this.connected = true\n  }\n\n  disconnect(): void {\n    document.removeEventListener('keyup', this.onKeyUp, true)\n    document.removeEventListener('keydown', this.onKeyDown, true)\n    this.connected = false\n  }\n\n  update(): void {\n    if (this.type === 'continuous' && !this.damper.reachedTarget()) {\n      this.damper.update()\n      this.dispatchEvent({\n        type: 'update',\n        values: this.damper.getCurrentValues(),\n        deltas: this.damper.getDeltaValues(),\n      } as KeyboardAdaptorContinuousEvent)\n      if (this.damper.reachedTarget()) {\n        this.damper.resetAll(0)\n        this.dispatchEvent({\n          type: 'inertiacomplete',\n        } as IntertiaCompleteEvent)\n      }\n    }\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  private onKeyUp(event: KeyboardEvent): void {\n    if (this.type === 'discrete') {\n      for (const name in this.keyMapping) {\n        if (this.keyMapping[name].includes(event.key)) {\n          if (this.preventBubbling) event.preventDefault()\n          this.dispatchEvent({\n            type: 'trigger',\n            trigger: name,\n          } as KeyboardAdaptorDiscreteEvent)\n          break\n        }\n      }\n    }\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    if (this.type === 'continuous') {\n      for (const name in this.keyMapping) {\n        if (this.keyMapping[name].includes(event.key)) {\n          if (this.preventBubbling) event.preventDefault()\n          this.damper.addToTarget(name, this.incrementor)\n          break\n        }\n      }\n    }\n  }\n}\n","import { BaseAdaptor, ContinuousEvent, IntertiaCompleteEvent } from './BaseAdaptor'\nimport { Damper, DamperValues } from '../Damper'\n\ninterface Coordinates extends DamperValues {\n  x: number\n  y: number\n}\n\n/**\n * Event: Fired when when `PointerEvent`s are triggered\n * @example\n * ```javascript\n * adaptor.on('trigger', (e) => {\n *   console.log('x/y coordinates', e.values.x, e.values.y)\n * })\n * ```\n * */\nexport interface PointerAdaptorEvent extends ContinuousEvent {\n  /** Dampened x and y pointer coordinates */\n  values: Coordinates\n  /** Pointer coordinate change since previous update */\n  deltas: Coordinates\n  /** Number of pointers registered */\n  pointerCount: number\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#PointerAdaptor} constructor\n */\nexport interface PointerAdaptorProps {\n  /** DOM element that should listen for pointer events. Defaults to `document.body` */\n  domElement?: HTMLElement\n  /** Damping value between 0 and 1. Defaults to 0.5 */\n  dampingFactor?: number\n  /** Whether to normalize the pointer position values. Defaults to true */\n  shouldNormalize?: boolean\n  /** If values are normalized, whether they should be in -1 to 1 range. Defaults to true. */\n  normalizeAroundZero?: boolean\n  /** Debounce for registering a change in the pointer count, in ms. Defaults to 100. */\n  multipointerThreshold?: number\n}\n\nconst defaultProps: PointerAdaptorProps = {\n  domElement: document.body,\n  dampingFactor: 0.5,\n  shouldNormalize: true,\n  normalizeAroundZero: true,\n  multipointerThreshold: 100,\n}\n\n/**\n * Parse pointer events to emit dampened, normalized coordinates along with the pointer count (for detecting multi-touch or drag events)\n * @remarks\n * See {@link three-story-controls#PointerAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#PointerAdaptorEvent} for emitted event signatures.\n * Note: CSS property `touch-action: none` will probably be needed on listener element.\n * @example Pointer adaptor\n * ```javascript\n * const pointerAdaptor = new PointerAdaptor()\n * pointerAdaptor.connect()\n * pointerAdaptor.addEventListener('update', (event) => {\n *  switch(event.pointerCount) {\n *    case 0:\n *      cube.scale.x = event.values.x\n *      cube.scale.y = event.values.y\n *      break\n *    case 1:\n *      cube.position.x += event.deltas.x\n *      cube.position.y -= event.deltas.y\n *      break\n *    default:\n *      break\n *  }\n * })\n *\n * // in RAF loop:\n * function animate(t) {\n *  pointerAdaptor.update(t)\n * }\n * ```\n */\nexport class PointerAdaptor extends BaseAdaptor {\n  private domElement = document.body\n  private dampingFactor: number\n  private shouldNormalize = true\n  private normalizeAroundZero = true\n  private multipointerThreshold: number\n  private damper: Damper\n  private connected: boolean\n  private width: number\n  private height: number\n  private pointerCount = 0\n  private recordedPosition = false\n  private cache: Array<PointerEvent> = []\n  private lastDownTime = 0\n  private lastUpTime = 0\n\n  constructor(props: PointerAdaptorProps) {\n    super()\n    Object.assign(this, defaultProps, props)\n    this.damper = new Damper({\n      values: { x: null, y: null },\n      dampingFactor: this.dampingFactor,\n    })\n    this.setDimensions()\n    this.onPointerMove = this.onPointerMove.bind(this)\n    this.onPointerUp = this.onPointerUp.bind(this)\n    this.onPointerDown = this.onPointerDown.bind(this)\n    this.onResize = this.onResize.bind(this)\n  }\n\n  connect(): void {\n    this.domElement.addEventListener('pointermove', this.onPointerMove, { passive: true })\n    this.domElement.addEventListener('pointerdown', this.onPointerDown, { passive: true })\n    this.domElement.addEventListener('pointerleave', this.onPointerUp, { passive: true })\n    this.domElement.addEventListener('pointerup', this.onPointerUp, { passive: true })\n    window.addEventListener('resize', this.onResize)\n    this.connected = true\n  }\n\n  disconnect(): void {\n    this.domElement.removeEventListener('pointermove', this.onPointerMove)\n    this.domElement.removeEventListener('pointerdown', this.onPointerDown)\n    this.domElement.removeEventListener('pointerleave', this.onPointerUp)\n    this.domElement.removeEventListener('pointerup', this.onPointerUp)\n    this.connected = false\n  }\n\n  update(time: number): void {\n    if (\n      this.pointerCount !== this.cache.length &&\n      time - this.lastDownTime > this.multipointerThreshold &&\n      time - this.lastUpTime > this.multipointerThreshold\n    ) {\n      this.pointerCount = this.cache.length\n      if (this.pointerCount === 0) {\n        this.damper.resetAll(null)\n        this.recordedPosition = false\n      } else {\n        this.damper.resetData(this.getPointerPosition(this.cache[0]))\n        this.recordedPosition = true\n      }\n    }\n\n    if (!this.damper.reachedTarget()) {\n      this.damper.update()\n      this.dispatchEvent({\n        type: 'update',\n        values: this.shouldNormalize\n          ? this.normalize(this.damper.getCurrentValues() as Coordinates, this.normalizeAroundZero)\n          : this.damper.getCurrentValues(),\n        deltas: this.shouldNormalize\n          ? this.normalize(this.damper.getDeltaValues() as Coordinates, false)\n          : this.damper.getDeltaValues(),\n        pointerCount: this.pointerCount,\n      } as PointerAdaptorEvent)\n      if (this.damper.reachedTarget()) {\n        this.dispatchEvent({ type: 'inertiacomplete' } as IntertiaCompleteEvent)\n      }\n    }\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  private setDimensions(): void {\n    this.width = this.domElement.getBoundingClientRect().width\n    this.height = this.domElement.getBoundingClientRect().height\n  }\n\n  private getPointerPosition(event: PointerEvent): Coordinates {\n    // event.offsetLeft is still experimental\n    return {\n      x: Math.max(0, Math.min(this.width, event.x - this.domElement.offsetLeft)),\n      y: Math.max(0, Math.min(this.height, event.y - this.domElement.offsetTop)),\n    }\n  }\n\n  private normalize(values: Coordinates, aroundZero: boolean): Coordinates {\n    let x = values.x / this.width\n    let y = values.y / this.height\n    if (aroundZero) {\n      x = x * 2 - 1\n      y = y * 2 - 1\n    }\n    return { x, y }\n  }\n\n  private onPointerMove(event: PointerEvent): void {\n    if (this.pointerCount === this.cache.length) {\n      if (this.cache.length === 0) {\n        if (!this.recordedPosition) {\n          this.damper.resetData(this.getPointerPosition(event))\n          this.recordedPosition = true\n        } else {\n          this.damper.setTarget(this.getPointerPosition(event))\n        }\n      } else {\n        if (event.pointerId === this.cache[0].pointerId) {\n          this.damper.setTarget(this.getPointerPosition(event))\n        }\n      }\n    }\n  }\n\n  private onPointerDown(event: PointerEvent): void {\n    // only deals with left mouse button right now\n    // TODO: add some logic for optional right button events\n    if (event.button === 0) {\n      this.cache.push(event)\n      this.lastDownTime = window.performance.now()\n    }\n  }\n\n  private onPointerUp(event: PointerEvent): void {\n    if (event.button === 0 || event.type === 'pointerleave') {\n      for (let i = 0; i < this.cache.length; i++) {\n        if (this.cache[i].pointerId == event.pointerId) {\n          this.cache.splice(i, 1)\n          break\n        }\n      }\n      this.lastUpTime = window.performance.now()\n    }\n  }\n\n  private onResize(): void {\n    this.setDimensions()\n  }\n}\n","import { BaseAdaptor, ContinuousEvent, IntertiaCompleteEvent } from './BaseAdaptor'\nimport { Damper, DamperValues } from '../Damper'\n\n/**\n * Event: Fired when when the 'in view' amount of the given DOM element changes\n */\nexport interface ScrollAdaptorEvent extends ContinuousEvent {\n  values: DamperValues\n  dampenedValues: DamperValues\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#ScrollAdaptor} constructor\n */\nexport interface ScrollAdaptorProps {\n  /** Long DOM Element to observe */\n  scrollElement: HTMLElement\n  /** Offset to start registering scroll, in px or vh. Default starts when top of element is at bottom of viewport. */\n  startOffset?: string\n  /** Offset to end registering scroll, in px or vh. Default ends when bottom of element is at top of viewport. */\n  endOffset?: string\n  /** Buffer before and after element to start registering scroll. Number between 0 and 1, defaults to 0.1 */\n  buffer?: number\n  /** Value between 0 and 1. Defaults to 0.5 */\n  dampingFactor?: number\n}\n\nconst defaultProps: Partial<ScrollAdaptorProps> = {\n  startOffset: '0px',\n  endOffset: '0px',\n  buffer: 0.1,\n  dampingFactor: 0.5,\n}\n\n/**\n * Emits normalized values for the amount a given DOM element has been scrolled through.\n * @remarks\n * See {@link three-story-controls#ScrollAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#ScrollAdaptorEvent} for emitted event signatures.\n * @example Scroll adaptor\n * ```javascript\n * const scrollAdaptor = new ScrollAdaptor({ scrollElement: document.querySelector('.scroller'), dampingFactor: 0.1 })\n * scrollAdaptor.connect()\n * scrollAdaptor.addEventListener('update', (event) => {\n *   cube.rotation.y = event.dampenedValues.scrollPercent*Math.PI*2\n * })\n * ```\n */\nexport class ScrollAdaptor extends BaseAdaptor {\n  private scrollElement: HTMLElement\n  private damper: Damper\n  private dampingFactor: number\n  private connected: boolean\n  private values: DamperValues\n  private lastSeenScrollValue: number\n  private previousScrollValue: number\n  private startPosition: number\n  private endPosition: number\n  private distance: number\n  private bufferedStartPosition: number\n  private bufferedEndPosition: number\n  private startOffset: string\n  private endOffset: string\n  private buffer: number\n  private resizeObserver: ResizeObserver\n\n  constructor(props: ScrollAdaptorProps) {\n    super()\n    Object.assign(this, defaultProps, props)\n    this.lastSeenScrollValue = window.scrollY || -1\n    this.previousScrollValue = this.lastSeenScrollValue\n    this.values = {\n      scrollPx: null,\n      scrollPercent: null,\n    }\n    this.damper = new Damper({\n      values: this.values,\n      dampingFactor: this.dampingFactor,\n    })\n    this.calculateDimensions = this.calculateDimensions.bind(this)\n    this.onScroll = this.onScroll.bind(this)\n    this.resizeObserver = new ResizeObserver(this.calculateDimensions)\n    this.calculateDimensions()\n  }\n\n  connect(): void {\n    window.addEventListener('scroll', this.onScroll, { passive: true })\n    this.resizeObserver.observe(document.body)\n    this.connected = true\n  }\n\n  disconnect(): void {\n    window.removeEventListener('scroll', this.onScroll)\n    this.resizeObserver.unobserve(document.body)\n    this.connected = false\n  }\n\n  update(): void {\n    if (\n      this.lastSeenScrollValue !== this.previousScrollValue &&\n      this.lastSeenScrollValue >= this.bufferedStartPosition &&\n      this.lastSeenScrollValue <= this.bufferedEndPosition\n    ) {\n      const scrollPx = Math.max(0, Math.min(this.distance, this.lastSeenScrollValue - this.startPosition))\n      const scrollPercent = Math.max(0, Math.min(1, scrollPx / this.distance))\n      this.values = {\n        scrollPx,\n        scrollPercent,\n      }\n      this.damper.setTarget(this.values)\n      this.previousScrollValue = this.lastSeenScrollValue\n    }\n    if (!this.damper.reachedTarget()) {\n      this.damper.update()\n      this.dispatchEvent({\n        type: 'update',\n        values: this.values,\n        dampenedValues: this.damper.getCurrentValues(),\n      } as ScrollAdaptorEvent)\n      if (this.damper.reachedTarget()) {\n        this.dispatchEvent({ type: 'inertiacomplete' } as IntertiaCompleteEvent)\n      }\n    }\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  parseOffset(offset: string): number {\n    let amount = 0\n    if (offset) {\n      amount = parseInt(offset)\n      if (offset.indexOf('vh') !== -1) {\n        amount = (amount * window.innerHeight) / 100\n      } else if (this.distance && offset.indexOf('%') !== -1) {\n        amount = (amount * this.distance) / 100\n      }\n    }\n    return amount\n  }\n\n  private calculateOffset(element: HTMLElement): number {\n    if (!element) return 0\n    return this.calculateOffset(element.offsetParent as HTMLElement) + element.offsetTop\n  }\n\n  private calculateDimensions(): void {\n    const elementHeight = this.scrollElement.clientHeight\n    const offsetTop = this.calculateOffset(this.scrollElement)\n    this.startPosition = offsetTop - window.innerHeight + this.parseOffset(this.startOffset)\n    this.endPosition = offsetTop + elementHeight + this.parseOffset(this.endOffset)\n    this.distance = this.endPosition - this.startPosition\n    this.bufferedStartPosition = Math.max(0, this.startPosition * (1 - this.buffer))\n    this.bufferedEndPosition = Math.min(\n      this.endPosition * (1 + this.buffer),\n      document.body.getBoundingClientRect().height,\n    )\n  }\n\n  private onScroll(): void {\n    this.lastSeenScrollValue = window.scrollY\n  }\n}\n","import { BaseAdaptor, DiscreteEvent } from './BaseAdaptor'\n\n/**\n * Event: Fired when when swipe are registered\n * @remarks\n * The sign represents the direction of the swipe,\n * y = 1 when swiping down-to-up, and x = 1 when swiping left-to-right\n * */\nexport interface SwipeAdaptorEvent extends DiscreteEvent {\n  x: -1 | 1 | 0\n  y: -1 | 1 | 0\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#SwipeAdaptor} constructor\n */\nexport interface SwipeAdaptorProps {\n  /** DOM element to listen to events on. Defaults to document.body */\n  domElement?: HTMLElement\n  /** Threshold of pointer's deltaX to trigger events. Defaults to 60 */\n  thresholdX?: number\n  /** Threshold of pointer's deltaY to trigger events. Defaults to 60 */\n  thresholdY?: number\n}\n\nconst defaultProps: SwipeAdaptorProps = {\n  domElement: document.body,\n  thresholdX: 60,\n  thresholdY: 60,\n}\n\n/**\n * Emits events in response to swipe gestures above a given threshold.\n * @remarks\n * See {@link three-story-controls#SwipeAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#SwipeAdaptorEvent} for emitted event signatures.\n * Note: CSS property `touch-action: none` will probably be needed on listener element\n * @example Swipe adaptor\n * ```javascript\n * const swipeAdaptor = new SwipeAdaptor()\n * swipeAdaptor.connect()\n * swipeAdaptor.addEventListener('trigger', (event) => {\n *   cube.scale.y += event.y*0.1\n * })\n * ```\n */\nexport class SwipeAdaptor extends BaseAdaptor {\n  private domElement: HTMLElement\n  private thresholdX: number\n  private thresholdY: number\n  private startX: number\n  private startY: number\n  private connected: boolean\n\n  constructor(props: SwipeAdaptorProps = {}) {\n    super()\n    Object.assign(this, defaultProps, props)\n    this.onPointerUp = this.onPointerUp.bind(this)\n    this.onPointerDown = this.onPointerDown.bind(this)\n  }\n\n  connect(): void {\n    this.domElement.addEventListener('pointerdown', this.onPointerDown, { passive: true })\n    this.domElement.addEventListener('pointerup', this.onPointerUp, { passive: true })\n    this.connected = true\n  }\n\n  disconnect(): void {\n    this.domElement.removeEventListener('pointerdown', this.onPointerDown)\n    this.domElement.removeEventListener('pointerup', this.onPointerUp)\n    this.connected = false\n  }\n\n  update(): void {\n    // nothing to do here\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  private onPointerDown(event: PointerEvent): void {\n    if (event.pointerType !== 'mouse' && event.isPrimary) {\n      this.startX = event.screenX\n      this.startY = event.screenY\n    }\n  }\n\n  private onPointerUp(event: PointerEvent): void {\n    if (event.pointerType !== 'mouse' && event.isPrimary) {\n      const diffX = event.screenX - this.startX\n      const diffY = event.screenY - this.startY\n      if (Math.abs(diffX) >= this.thresholdX || Math.abs(diffY) >= this.thresholdY) {\n        this.dispatchEvent({\n          type: 'trigger',\n          x: Math.abs(diffX) >= this.thresholdX ? Math.sign(diffX) : 0,\n          y: Math.abs(diffY) >= this.thresholdY ? Math.sign(-1 * diffY) : 0,\n        } as SwipeAdaptorEvent)\n      }\n    }\n  }\n}\n","import { BaseAdaptor, DiscreteEvent, ContinuousEvent, IntertiaCompleteEvent } from './BaseAdaptor'\nimport { Damper, DamperValues } from '../Damper'\n\n/**\n * Event: Fired when when discrete `wheel` events are registered\n * @remarks\n * The sign represents the the direction of the wheel event that caused the event to trigger\n * */\nexport interface WheelAdaptorDiscreteEvent extends DiscreteEvent {\n  x: -1 | 1 | 0\n  y: -1 | 1 | 0\n}\n\n/**\n * Event: Fired on a continuous `WheelAdaptor` in response to `wheel` events\n * @remarks\n * DamperValues have `x` and `y` keys.\n * */\nexport interface WheelAdaptorContinuousEvent extends ContinuousEvent {\n  values: DamperValues\n  deltas: DamperValues\n}\n\n/**\n * A discrete adaptor works as a trigger - only firing events when wheel events pass a given threshold,\n * whereas a continuous adaptor continuously fires events on wheel\n * */\nexport type WheelAdaptorType = 'discrete' | 'continuous'\n\n/**\n * Properties that can be passed to the {@link three-story-controls#WheelAdaptor} constructor\n */\nexport interface WheelAdaptorProps {\n  /** 'discrete' or 'continuous' */\n  type: WheelAdaptorType\n  /** DOM element to listen to events on. Defaults to window */\n  domElement?: HTMLElement\n  /** Only used for continuous adaptor, value between 0 and 1. Defaults to 0.5 */\n  dampingFactor?: number\n  /** Only used for discrete adaptor, threshold of wheel.deltaX to trigger events. Defaults to 15 */\n  thresholdX?: number\n  /** Only used for discrete adaptor, threshold of wheel.deltaY to trigger events. Defaults to 15 */\n  thresholdY?: number\n  /** Only used for discrete adaptor, rest duration between firing trigger events. Defaults to 700 */\n  debounceDuration?: number\n}\n\nconst defaultProps: Partial<WheelAdaptorProps> = {\n  dampingFactor: 0.5,\n  thresholdX: 15,\n  thresholdY: 15,\n  debounceDuration: 700,\n}\n\n/**\n * Parse mouse wheel events and emit either dampened values, or trigger events for swipes that cross a given threshold.\n * @remarks\n * See {@link three-story-controls#WheelAdaptorProps} for all properties that can be passed to the constructor.\n * See {@link three-story-controls#WheelAdaptorDiscreteEvent} and {@link three-story-controls#WheelAdaptorContinuousEvent} for emitted event signatures.\n * @example Discrete adaptor\n * ```javascript\n * const wheelAdaptor = new WheelAdaptor({ type: 'discrete' })\n * wheelAdaptor.connect()\n * wheelAdaptor.addEventListener('trigger', (event) => {\n *   cube.scale.y += event.y*0.1\n * })\n * ```\n */\nexport class WheelAdaptor extends BaseAdaptor {\n  private type: WheelAdaptorType\n  private domElement: HTMLElement\n  private dampingFactor: number\n  private damper: Damper\n  private thresholdX: number\n  private thresholdY: number\n  private debounceDuration: number\n  private lastThresholdTrigger = 0\n  private connected: boolean\n\n  constructor(props: WheelAdaptorProps) {\n    super()\n    Object.assign(this, defaultProps, props)\n    this.damper = new Damper({\n      values: { x: 0, y: 0 },\n      dampingFactor: this.dampingFactor,\n    })\n    this.onWheel = this.onWheel.bind(this)\n  }\n\n  connect(): void {\n    const element = this.domElement || window\n    element.addEventListener('wheel', this.onWheel, { passive: true })\n    this.connected = true\n  }\n\n  disconnect(): void {\n    const element = this.domElement || window\n    element.removeEventListener('wheel', this.onWheel)\n    this.connected = false\n  }\n\n  update(): void {\n    if (this.type === 'continuous' && !this.damper.reachedTarget()) {\n      this.damper.update()\n      this.dispatchEvent({\n        type: 'update',\n        values: this.damper.getCurrentValues(),\n        deltas: this.damper.getDeltaValues(),\n      } as WheelAdaptorContinuousEvent)\n      if (this.damper.reachedTarget()) {\n        this.damper.resetAll(0)\n        this.dispatchEvent({\n          type: 'inertiacomplete',\n        } as IntertiaCompleteEvent)\n      }\n    }\n  }\n\n  isEnabled(): boolean {\n    return this.connected\n  }\n\n  private onWheel(event: WheelEvent): void {\n    if (this.type === 'continuous') {\n      this.damper.addToTarget('x', event.deltaX)\n      this.damper.addToTarget('y', event.deltaY)\n    } else if (this.type === 'discrete') {\n      if (Math.abs(event.deltaX) >= this.thresholdX || Math.abs(event.deltaY) >= this.thresholdY) {\n        const now = window.performance.now()\n        if (now - this.lastThresholdTrigger > this.debounceDuration) {\n          this.lastThresholdTrigger = now\n          this.dispatchEvent({\n            type: 'trigger',\n            x: Math.abs(event.deltaX) >= this.thresholdX ? Math.sign(event.deltaX) : 0,\n            y: Math.abs(event.deltaY) >= this.thresholdY ? Math.sign(event.deltaY) : 0,\n          } as WheelAdaptorDiscreteEvent)\n        }\n      }\n    }\n  }\n}\n","import { BaseControls } from './BaseControls'\nimport { CameraRig, CameraAction } from '../CameraRig'\nimport { KeyboardAdaptor } from '../adaptors/KeyboardAdaptor'\nimport { PointerAdaptor } from '../adaptors/PointerAdaptor'\nimport { WheelAdaptor } from '../adaptors/WheelAdaptor'\n\n/**\n * Properties that can be passed to the {@link three-story-controls#FreeMovementControls} constructor\n */\nexport interface FreeMovementControlsProps {\n  domElement?: HTMLElement\n  /** Damping factor between 0 and 1. Defaults to 0.3 */\n  pointerDampFactor?: number\n  /** Mutiplier for two-pointer translation. Defaults to 4 */\n  pointerScaleFactor?: number\n  /** Damping factor between 0 and 1. Defaults to 0.5 */\n  keyboardDampFactor?: number\n  /** Mutiplier for keyboard translation. Defaults to 0.5 */\n  keyboardScaleFactor?: number\n  /** Damping factor between 0 and 1. Defaults to 0.25 */\n  wheelDampFactor?: number\n  /** Mutiplier for wheel translation. Defaults to 0.05 */\n  wheelScaleFactor?: number\n  /** Mutiplier for panning. Defaults to Math.PI / 4 */\n  panDegreeFactor?: number\n  /** Mutiplier for tilting. Defaults to Math.PI / 10 */\n  tiltDegreeFactor?: number\n}\n\nconst defaultProps: FreeMovementControlsProps = {\n  domElement: document.body,\n  pointerDampFactor: 0.3,\n  pointerScaleFactor: 4,\n  keyboardDampFactor: 0.5,\n  keyboardScaleFactor: 0.5,\n  wheelDampFactor: 0.25,\n  wheelScaleFactor: 0.05,\n  panDegreeFactor: Math.PI / 4,\n  tiltDegreeFactor: Math.PI / 10,\n}\n\n/**\n * Control scheme to move the camera with arrow/WASD keys and mouse wheel; and rotate the camera with click-and-drag events.\n * @remarks\n * Control scheme to move the camera with arrow/WASD keys and mouse wheel; and rotate the camera with click-and-drag events.\n *  On a touch device, 1 finger swipe rotates the camera, and 2 fingers tranlsate/move the camera.\n *\n *\n *  Note: CSS property `touch-action: none` will probably be needed on listener element.\n *\n * See {@link three-story-controls#FreeMovementControlsProps} for all properties that can be passed to the constructor.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/freemove | DEMO }\n *\n * @example\n * ```js\n * const scene = new Scene()\n * const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new FreeMovementControls(cameraRig)\n *\n * controls.enable()\n *\n * // render loop\n * function animate(t) {\n *  controls.update(t)\n * }\n * ```\n *\n */\nexport class FreeMovementControls implements BaseControls {\n  readonly cameraRig: CameraRig\n  private keyboardAdaptor: KeyboardAdaptor\n  private wheelAdaptor: WheelAdaptor\n  private pointerAdaptor: PointerAdaptor\n  private wheelScaleFactor: number\n  private pointerScaleFactor: number\n  private panDegreeFactor: number\n  private tiltDegreeFactor: number\n  private enabled = false\n\n  /** {@inheritDoc three-story-controls#FreeMovementControlsProps#} */\n  constructor(cameraRig: CameraRig, props: FreeMovementControlsProps = {}) {\n    this.cameraRig = cameraRig\n\n    this.wheelScaleFactor = props.wheelScaleFactor || defaultProps.wheelScaleFactor\n    this.pointerScaleFactor = props.pointerScaleFactor || defaultProps.pointerScaleFactor\n    this.panDegreeFactor = props.panDegreeFactor || defaultProps.panDegreeFactor\n    this.tiltDegreeFactor = props.tiltDegreeFactor || defaultProps.tiltDegreeFactor\n\n    this.keyboardAdaptor = new KeyboardAdaptor({\n      type: 'continuous',\n      dampingFactor: props.keyboardDampFactor || defaultProps.keyboardDampFactor,\n      incrementor: props.keyboardScaleFactor || defaultProps.keyboardScaleFactor,\n    })\n\n    this.wheelAdaptor = new WheelAdaptor({\n      type: 'continuous',\n      dampingFactor: props.wheelDampFactor || defaultProps.wheelDampFactor,\n      domElement: props.domElement || defaultProps.domElement,\n    })\n\n    this.pointerAdaptor = new PointerAdaptor({\n      domElement: props.domElement || defaultProps.domElement,\n      dampingFactor: props.pointerDampFactor || defaultProps.pointerDampFactor,\n    })\n\n    this.onWheel = this.onWheel.bind(this)\n    this.onKey = this.onKey.bind(this)\n    this.onPointer = this.onPointer.bind(this)\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  enable(): void {\n    this.wheelAdaptor.connect()\n    this.keyboardAdaptor.connect()\n    this.pointerAdaptor.connect()\n    this.wheelAdaptor.addEventListener('update', this.onWheel)\n    this.keyboardAdaptor.addEventListener('update', this.onKey)\n    this.pointerAdaptor.addEventListener('update', this.onPointer)\n    this.enabled = true\n  }\n\n  disable(): void {\n    this.wheelAdaptor.disconnect()\n    this.keyboardAdaptor.disconnect()\n    this.pointerAdaptor.disconnect()\n    this.wheelAdaptor.removeEventListener('update', this.onWheel)\n    this.keyboardAdaptor.removeEventListener('update', this.onKey)\n    this.pointerAdaptor.removeEventListener('update', this.onPointer)\n    this.enabled = false\n  }\n\n  private onWheel(event): void {\n    this.cameraRig.do(CameraAction.Dolly, event.deltas.y * this.wheelScaleFactor)\n    this.cameraRig.do(CameraAction.Truck, event.deltas.x * this.wheelScaleFactor)\n  }\n\n  private onKey(event): void {\n    this.cameraRig.do(CameraAction.Dolly, event.values.backward - event.values.forward)\n    this.cameraRig.do(CameraAction.Truck, event.values.right - event.values.left)\n    this.cameraRig.do(CameraAction.Pedestal, event.values.up - event.values.down)\n  }\n\n  private onPointer(event): void {\n    switch (event.pointerCount) {\n      case 1:\n        this.cameraRig.do(CameraAction.Pan, event.deltas.x * this.panDegreeFactor)\n        this.cameraRig.do(CameraAction.Tilt, event.deltas.y * this.tiltDegreeFactor)\n        break\n      case 2:\n        this.cameraRig.do(CameraAction.Dolly, -event.deltas.y * this.pointerScaleFactor)\n        this.cameraRig.do(CameraAction.Truck, -event.deltas.x * this.pointerScaleFactor)\n        break\n      default:\n        break\n    }\n  }\n\n  update(time: number): void {\n    if (this.enabled) {\n      this.keyboardAdaptor.update()\n      this.wheelAdaptor.update()\n      this.pointerAdaptor.update(time)\n    }\n  }\n}\n","import { BaseControls } from './BaseControls'\nimport { CameraRig } from '../CameraRig'\nimport { ScrollAdaptor } from '../adaptors/ScrollAdaptor'\n\n/**\n * ScrollActions provide a way to add custom callback hooks for specific parts of the scroll area\n */\nexport interface ScrollAction {\n  /** When to start the action, in %, px or vh. */\n  start: string\n  /** When to end the action, in %, px or vh. */\n  end: string\n  /** Callback with 0-1 progress when element is between start and end conditions.  */\n  callback: (progress: number) => void\n  /** @internal */\n  startPx: number\n  /** @internal */\n  endPx: number\n  /** @internal */\n  bufferedStartPx: number\n  /** @internal */\n  bufferedEndPx: number\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#ScrollControls} constructor\n */\nexport interface ScrollControlsProps {\n  /** Long DOM Element to observe */\n  scrollElement: HTMLElement\n  /** Offset to start registering scroll, in px or vh. Default starts when top of element is at bottom of viewport. */\n  startOffset?: string\n  /** Offset to end registering scroll, in px or vh. Default ends when bottom of element is at top of viewport. */\n  endOffset?: string\n  /** Value between 0 and 1. Defaults to 1 */\n  dampingFactor?: number\n  /** Buffer before and after element to start registering scroll. Number (percentage) between 0 and 1, defaults to 0.1 */\n  buffer?: number\n  /** When in the scroll to start the camera animation, can be specified in px, % or vh */\n  cameraStart?: string\n  /** When in the scroll to end the camera animation, can be specified in px, % or vh */\n  cameraEnd?: string\n  /** Array of ScrollActions for custom scroll hooks  */\n  scrollActions: ScrollAction[]\n}\n\nconst defaultProps: Partial<ScrollControlsProps> = {\n  startOffset: '0px',\n  endOffset: '0px',\n  dampingFactor: 1,\n  buffer: 0.1,\n  cameraStart: '0%',\n  cameraEnd: '100%',\n  scrollActions: [],\n}\n\nconst mapRange = (number, inMin, inMax, outMin, outMax): number => {\n  return Math.max(outMin, Math.min(outMax, (number - inMin) * ((outMax - outMin) / (inMax - inMin)) + outMin))\n}\n\n/**\n * Control scheme to scrub through the CameraRig's `AnimationClip` based on the scroll of a DOM Element\n * @remarks\n * Control scheme to scrub through the CameraRig's `AnimationClip` based on the scroll of a DOM Element.\n *  These controls expect to observe an element that is a few viewports long, and use the scroll distance to scrub through a camera animation.\n *  By default, the 'start' of the animation is when the element starts to be in view (ie the top of the element aligns with the bottom of the viewport),\n *  and the 'end' is when the element goes out of view (when the bottom of the elements aligns with the top of the viewport).\n *  These trigger points can be customised with the `cameraStart` and `cameraEnd` properties. Additional scroll-dependant procedures can also be defined through `scrollActions`.\n *\n *\n * See {@link three-story-controls#ScrollControlsProps} for all properties that can be passed to the constructor.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/scroll-controls/ | DEMO }\n *\n * @example\n * ```js\n * const scene = new Scene()\n * const gltfLoader = new GLTFLoader()\n * const camera = new PerspectiveCamera()\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new ScrollControls(cameraRig, {\n *  scrollElement: document.querySelector('.scroller'),\n *  cameraStart: '12%',\n *  cameraEnd: '90%',\n *  scrollActions: [\n *    { start: '0%' , end: '10%', callback: e => fadeInElement(e) },\n *    { start: '85%' , end: '100%', callback: e => fadeOutElement(e) }\n *  ]\n * })\n *\n * function fadeInElement(progress) { // entry fade transition }\n * function fadeOutElement(progress) { // exit fade transition }\n *\n * gltfLoader.load(cameraPath, (gltf) => {\n *  cameraRig.setAnimationClip(gltf.animations[0])\n *  cameraRig.setAnimationTime(0)\n *  controls.enable()\n * })\n *\n * // render loop\n * function animate() {\n *  controls.update()\n * }\n * ```\n */\nexport class ScrollControls implements BaseControls {\n  readonly cameraRig: CameraRig\n  private scrollAdaptor: ScrollAdaptor\n  private enabled = false\n  private cameraStart: string\n  private cameraEnd: string\n  private cameraStartPx: number\n  private cameraEndPx: number\n  private cameraBufferedStartPx: number\n  private cameraBufferedEndPx: number\n  private scrollActions: ScrollAction[]\n  private buffer: number\n\n  constructor(cameraRig: CameraRig, props: ScrollControlsProps) {\n    this.cameraRig = cameraRig\n    this.cameraRig.setAnimationTime(0)\n\n    this.scrollAdaptor = new ScrollAdaptor({\n      scrollElement: props.scrollElement,\n      dampingFactor: props.dampingFactor || defaultProps.dampingFactor,\n      startOffset: props.startOffset || defaultProps.startOffset,\n      endOffset: props.endOffset || defaultProps.endOffset,\n      buffer: props.buffer || defaultProps.buffer,\n    })\n\n    this.cameraStart = props.cameraStart || defaultProps.cameraStart\n    this.cameraEnd = props.cameraEnd || defaultProps.cameraEnd\n    this.scrollActions = props.scrollActions || defaultProps.scrollActions\n    this.buffer = props.buffer || defaultProps.buffer\n    this.calculateStops()\n    this.onScroll = this.onScroll.bind(this)\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  enable(): void {\n    this.scrollAdaptor.connect()\n    this.scrollAdaptor.addEventListener('update', this.onScroll)\n    this.enabled = true\n  }\n\n  disable(): void {\n    this.scrollAdaptor.disconnect()\n    this.scrollAdaptor.removeEventListener('update', this.onScroll)\n    this.enabled = false\n  }\n\n  update(): void {\n    if (this.enabled) {\n      this.scrollAdaptor.update()\n    }\n  }\n\n  private calculateStops(): void {\n    this.cameraStartPx = this.scrollAdaptor.parseOffset(this.cameraStart)\n    this.cameraEndPx = this.scrollAdaptor.parseOffset(this.cameraEnd)\n    this.cameraBufferedStartPx = this.cameraStartPx * (1 - this.buffer)\n    this.cameraBufferedEndPx = this.cameraEndPx * (1 + this.buffer)\n    this.scrollActions.forEach((action) => {\n      action.startPx = this.scrollAdaptor.parseOffset(action.start)\n      action.endPx = this.scrollAdaptor.parseOffset(action.end)\n      action.bufferedStartPx = action.startPx * (1 - this.buffer)\n      action.bufferedEndPx = action.endPx * (1 + this.buffer)\n    })\n  }\n\n  private onScroll(event): void {\n    const progress = event.dampenedValues.scrollPx\n    if (progress >= this.cameraBufferedStartPx && progress <= this.cameraBufferedEndPx) {\n      this.cameraRig.setAnimationPercentage(mapRange(progress, this.cameraStartPx, this.cameraEndPx, 0, 1))\n    }\n    this.scrollActions.forEach((action) => {\n      if (progress >= action.bufferedStartPx && progress <= action.bufferedEndPx) {\n        action.callback(mapRange(progress, action.startPx, action.endPx, 0, 1))\n      }\n    })\n  }\n}\n","import { EventDispatcher, Vector3, Quaternion } from 'three'\nimport { BaseControls, UpdatePOIsEvent, ExitPOIsEvent } from './BaseControls'\nimport { KeyboardAdaptor } from '../adaptors/KeyboardAdaptor'\nimport { CameraRig } from '../CameraRig'\n\nexport interface StoryPointMarker {\n  /** Camera position */\n  position: Vector3\n  /** Camera quaternion */\n  quaternion: Quaternion\n  /** Transition duration, defaults to 1 */\n  duration?: number\n  /** Transition easing, defaults to power1 */\n  ease?: string\n  /** Use spherical interpolation for rotation, defaults to true */\n  useSlerp?: boolean\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#StoryPointsControls} constructor\n */\nexport interface StoryPointsControlsProps {\n  /** Whether to cycle to the first/last POI after reaching the end/start. When false, controls with emit 'ExitStoryPoints' events. Defaults to false. */\n  cycle?: boolean\n  /** Use keyboard arrow keys as navigation, defaults to true */\n  useKeyboard?: boolean\n}\n\nconst defaultProps: StoryPointsControlsProps = {\n  cycle: false,\n  useKeyboard: true,\n}\n\n/**\n * Control scheme to transition the camera between given points in world space.\n * @remarks\n * See {@link three-story-controls#StoryPointsControlsProps} for all properties that can be passed to the constructor.\n *\n * See {@link three-story-controls#StoryPointMarker} for POI properties.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/story-points/ | DEMO }\n *\n * @example\n * ```js\n *\n * const pois = [\n *  { position: new Vector3(...), quaternion: new Quaternion(...) },\n *  { position: new Vector3(...), quaternion: new Quaternion(...) },\n * ]\n * const scene = new Scene()\n * const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new StoryPointsControls(cameraRig, pois)\n *\n * controls.enable()\n * controls.goToPOI(0)\n *\n * // Assuming DOM elements with classes 'nextBtn' and 'prevBtn' have been created\n * document.querySelector('.nextBtn').on('click', () => controls.nextPOI() )\n * document.querySelector('.prevBtn').on('click', () => controls.prevPOI() )\n * ```\n */\nexport class StoryPointsControls extends EventDispatcher implements BaseControls {\n  readonly cameraRig: CameraRig\n  private keyboardAdaptor: KeyboardAdaptor\n  private pois: StoryPointMarker[]\n  private currentIndex: number | null = null\n  private upcomingIndex: number | null = null\n  private enabled = false\n  private cycle: boolean\n  private useKeyboard: boolean\n\n  constructor(cameraRig: CameraRig, pois: StoryPointMarker[] = [], props: StoryPointsControlsProps = {}) {\n    super()\n    this.cameraRig = cameraRig\n    this.pois = pois\n    Object.assign(this, defaultProps, props)\n    if (this.useKeyboard) {\n      this.keyboardAdaptor = new KeyboardAdaptor({\n        type: 'discrete',\n        keyMapping: {\n          next: ['ArrowDown', 'ArrowRight'],\n          prev: ['ArrowUp', 'ArrowLeft'],\n        },\n      })\n      this.onKey = this.onKey.bind(this)\n    }\n    this.onCameraStart = this.onCameraStart.bind(this)\n    this.onCameraUpdate = this.onCameraUpdate.bind(this)\n    this.onCameraEnd = this.onCameraEnd.bind(this)\n  }\n\n  getCurrentIndex(): number {\n    return this.currentIndex\n  }\n\n  nextPOI(): void {\n    const next = this.currentIndex + 1\n    if (next >= this.pois.length && !this.cycle) {\n      this.dispatchEvent({\n        type: 'ExitPOIs',\n        exitFrom: 'end',\n      } as ExitPOIsEvent)\n    } else {\n      this.goToPOI(next % this.pois.length)\n    }\n  }\n\n  prevPOI(): void {\n    const prev = this.currentIndex - 1\n    if (prev < 0 && !this.cycle) {\n      this.dispatchEvent({\n        type: 'ExitPOIs',\n        exitFrom: 'start',\n      } as ExitPOIsEvent)\n    } else {\n      this.goToPOI((prev + this.pois.length) % this.pois.length)\n    }\n  }\n\n  goToPOI(index: number): void {\n    this.upcomingIndex = index\n    const poi = this.pois[this.upcomingIndex]\n    this.cameraRig.flyTo(poi.position, poi.quaternion, poi.duration, poi.ease, poi.useSlerp)\n  }\n\n  enable(): void {\n    if (this.useKeyboard) {\n      this.keyboardAdaptor.connect()\n      this.keyboardAdaptor.addEventListener('trigger', this.onKey)\n    }\n    this.cameraRig.addEventListener('CameraMoveStart', this.onCameraStart)\n    this.cameraRig.addEventListener('CameraMoveUpdate', this.onCameraUpdate)\n    this.cameraRig.addEventListener('CameraMoveEnd', this.onCameraEnd)\n    this.enabled = true\n  }\n\n  disable(): void {\n    if (this.useKeyboard) {\n      this.keyboardAdaptor.disconnect()\n      this.keyboardAdaptor.removeEventListener('trigger', this.onKey)\n    }\n    this.cameraRig.removeEventListener('CameraMoveStart', this.onCameraStart)\n    this.cameraRig.removeEventListener('CameraMoveUpdate', this.onCameraUpdate)\n    this.cameraRig.removeEventListener('CameraMoveEnd', this.onCameraEnd)\n    this.enabled = false\n  }\n\n  update(): void {\n    // nothing to do here\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  private updatePois(progress: number): void {\n    this.dispatchEvent({\n      type: 'update',\n      currentIndex: this.currentIndex,\n      upcomingIndex: this.upcomingIndex,\n      progress,\n    } as UpdatePOIsEvent)\n  }\n\n  private onCameraStart(): void {\n    this.updatePois(0)\n  }\n\n  private onCameraUpdate(event): void {\n    this.updatePois(event.progress)\n  }\n\n  private onCameraEnd(): void {\n    this.currentIndex = this.upcomingIndex\n    this.upcomingIndex = null\n  }\n\n  private onKey(event): void {\n    if (event.trigger === 'next') {\n      this.nextPOI()\n    } else if (event.trigger === 'prev') {\n      this.prevPOI()\n    }\n  }\n}\n","import { EventDispatcher } from 'three'\nimport { BaseControls, UpdatePOIsEvent, ExitPOIsEvent } from './BaseControls'\nimport { CameraRig } from '../CameraRig'\nimport { KeyboardAdaptor } from '../adaptors/KeyboardAdaptor'\nimport { WheelAdaptor } from '../adaptors/WheelAdaptor'\nimport { SwipeAdaptor } from '../adaptors/SwipeAdaptor'\n\nexport interface PathPointMarker {\n  frame: number\n}\n\n/**\n * Properties that can be passed to the {@link three-story-controls#PathPointsControls} constructor\n */\nexport interface PathPointsControlsProps {\n  /** Threshold of wheel delta that triggers a transition. Defaults to 15 */\n  wheelThreshold?: number\n  /** Threshold of swipe distance that triggers a transition. Defaults to 60 */\n  swipeThreshold?: number\n  /** Transition duration, defaults to 1 */\n  duration?: number\n  /** Transition easing, defaults to power1 */\n  ease?: string\n  /** Use keyboard arrow keys as navigation, defaults to true */\n  useKeyboard?: boolean\n}\n\nconst defaultProps: PathPointsControlsProps = {\n  wheelThreshold: 15,\n  swipeThreshold: 60,\n  duration: 1,\n  ease: 'power1',\n  useKeyboard: true,\n}\n\n/**\n * Control scheme to transition the camera between specific points (frames) along a path specified through an `AnimationClip`.\n * @remarks\n * Control scheme to transition the camera between specific points (frames) along a path specified through an `AnimationClip`.\n *  A mouse wheel or swipe or keyboard arrow event triggers the camera to smoothly transition from one given frame number to the next.\n *\n *\n * Note: CSS property `touch-action: none` will probably be needed on listener element.\n *\n * See {@link three-story-controls#PathPointsControlsProps} for all properties that can be passed to the constructor.\n *\n * See {@link three-story-controls#PathPointMarker} for POI properties.\n *\n * See {@link three-story-controls#UpdatePOIsEvent} and {@link three-story-controls#ExitPOIsEvent} for emitted event signatures.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/path-points/ | DEMO }\n * @example\n * ```js\n *\n * const pois = [ { frame: 0 }, { frame: 54 } ....]\n * const scene = new Scene()\n * const gltfLoader = new GLTFLoader()\n * let camera, cameraRig, controls\n *\n * gltfLoader.load(cameraPath, (gltf) => {\n *  camera = gltf.cameras[0]\n *  cameraRig = new CameraRig(camera, scene)\n *  cameraRig.setAnimationClip(gltf.animations[0])\n *  cameraRig.setAnimationTime(0)\n *  controls = new PathPointsControls(cameraRig, pois)\n *  controls.enable()\n *  controls.addEventListener('ExitPOIs', (e) => {\n *    // e.exitFrom will be either 'start' or 'end'\n *  })\n *  controls.addEventListener('update', (e) => {\n *    // e.currentIndex will be the index of the starting poi\n *    // e.upcomingIndex will be the index of the upcoming poi\n *    // e.progress will be a number 0-1 indicating progress of the transition\n *  })\n * })\n * ```\n */\nexport class PathPointsControls extends EventDispatcher implements BaseControls {\n  readonly cameraRig: CameraRig\n  private wheelAdaptor: WheelAdaptor\n  private swipeAdaptor: SwipeAdaptor\n  private keyboardAdaptor: KeyboardAdaptor\n  private pois: PathPointMarker[]\n  private currentIndex = 0\n  private upcomingIndex: number | null = null\n  private enabled = false\n  private duration: number\n  private ease: string\n  private wheelThreshold: number\n  private swipeThreshold: number\n  private useKeyboard: boolean\n\n  constructor(cameraRig: CameraRig, pois: PathPointMarker[] = [], props: PathPointsControlsProps = {}) {\n    super()\n    this.cameraRig = cameraRig\n    this.pois = pois\n    Object.assign(this, defaultProps, props)\n    this.wheelAdaptor = new WheelAdaptor({ type: 'discrete', thresholdY: this.wheelThreshold })\n    this.swipeAdaptor = new SwipeAdaptor({ thresholdY: this.swipeThreshold })\n    if (this.useKeyboard) {\n      this.keyboardAdaptor = new KeyboardAdaptor({\n        type: 'discrete',\n        keyMapping: {\n          next: ['ArrowDown', 'ArrowRight'],\n          prev: ['ArrowUp', 'ArrowLeft'],\n        },\n      })\n      this.onKey = this.onKey.bind(this)\n    }\n    this.onCameraStart = this.onCameraStart.bind(this)\n    this.onCameraUpdate = this.onCameraUpdate.bind(this)\n    this.onCameraEnd = this.onCameraEnd.bind(this)\n    this.onTrigger = this.onTrigger.bind(this)\n  }\n\n  getCurrentIndex(): number {\n    return this.currentIndex\n  }\n\n  enable(): void {\n    if (this.useKeyboard) {\n      this.keyboardAdaptor.addEventListener('trigger', this.onKey)\n      this.keyboardAdaptor.connect()\n    }\n    this.wheelAdaptor.addEventListener('trigger', this.onTrigger)\n    this.swipeAdaptor.addEventListener('trigger', this.onTrigger)\n    this.cameraRig.addEventListener('CameraMoveStart', this.onCameraStart)\n    this.cameraRig.addEventListener('CameraMoveUpdate', this.onCameraUpdate)\n    this.cameraRig.addEventListener('CameraMoveEnd', this.onCameraEnd)\n    this.wheelAdaptor.connect()\n    this.swipeAdaptor.connect()\n    this.enabled = true\n  }\n\n  disable(): void {\n    if (this.useKeyboard) {\n      this.keyboardAdaptor.removeEventListener('trigger', this.onKey)\n      this.keyboardAdaptor.disconnect()\n    }\n    this.wheelAdaptor.removeEventListener('trigger', this.onTrigger)\n    this.swipeAdaptor.removeEventListener('trigger', this.onTrigger)\n    this.cameraRig.removeEventListener('CameraMoveStart', this.onCameraStart)\n    this.cameraRig.removeEventListener('CameraMoveUpdate', this.onCameraUpdate)\n    this.cameraRig.removeEventListener('CameraMoveEnd', this.onCameraEnd)\n    this.wheelAdaptor.disconnect()\n    this.swipeAdaptor.disconnect()\n    this.enabled = false\n  }\n\n  update(): void {\n    // nothing to do here\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  private onKey(event): void {\n    switch (event.trigger) {\n      case 'prev':\n        this.onTrigger({ y: -1 })\n        break\n      case 'next':\n        this.onTrigger({ y: 1 })\n        break\n      default:\n        break\n    }\n  }\n\n  private onTrigger(event): void {\n    const index = this.currentIndex + event.y\n    if (index >= this.pois.length) {\n      this.dispatchEvent({\n        type: 'ExitPOIs',\n        exitFrom: 'end',\n      } as ExitPOIsEvent)\n    } else if (index < 0) {\n      this.dispatchEvent({\n        type: 'ExitPOIs',\n        exitFrom: 'start',\n      } as ExitPOIsEvent)\n    } else {\n      this.upcomingIndex = index\n      this.cameraRig.flyToKeyframe(this.pois[this.upcomingIndex].frame, this.duration, this.ease)\n    }\n  }\n\n  private updatePois(progress: number): void {\n    this.dispatchEvent({\n      type: 'update',\n      currentIndex: this.currentIndex,\n      upcomingIndex: this.upcomingIndex,\n      progress,\n    } as UpdatePOIsEvent)\n  }\n\n  private onCameraStart(): void {\n    this.updatePois(0)\n  }\n\n  private onCameraUpdate(event): void {\n    this.updatePois(event.progress)\n  }\n\n  private onCameraEnd(): void {\n    this.currentIndex = this.upcomingIndex\n    this.upcomingIndex = null\n  }\n}\n","import { BaseControls } from './BaseControls'\nimport { CameraRig, CameraAction, RigComponent } from '../CameraRig'\nimport { PointerAdaptor } from '../adaptors/PointerAdaptor'\n\n/**\n * Properties that can be passed to the {@link three-story-controls#ThreeDOFControls} constructor\n */\n//TODO: add option for relative or absolute control (in terms of screen space)\nexport interface ThreeDOFControlsProps {\n  /** DOM element that should listen for pointer events. Defaults to `document.body` */\n  domElement?: HTMLElement\n  /** Mutiplier for panning. Defaults to Math.PI / 20 */\n  panFactor?: number\n  /** Mutiplier for tilting. Defaults to Math.PI / 20 */\n  tiltFactor?: number\n  /** Mutiplier for truck translation. Defaults to 1 */\n  truckFactor?: number\n  /** Mutiplier for pedestal translation. Defaults to 1 */\n  pedestalFactor?: number\n  /** Damping factor between 0 and 1. Defaults to 0.7 */\n  dampingFactor?: number\n}\n\nconst defaultProps: ThreeDOFControlsProps = {\n  domElement: document.body,\n  panFactor: Math.PI / 20,\n  tiltFactor: Math.PI / 20,\n  truckFactor: 1,\n  pedestalFactor: 1,\n  dampingFactor: 0.7,\n}\n\n/**\n * Control scheme for slight rotation and translation movement in response to mouse movements (designed to be used in conjunction with other control schemes)\n * @remarks\n * Note: CSS property `touch-action: none` will probably be needed on listener element\n *\n * See {@link three-story-controls#ThreeDOFControlsProps} for all properties that can be passed to the constructor.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/story-points/ | DEMO w/ story points }\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/scroll-controls/ | DEMO w/ scroll controls}\n *\n * @example\n * ```js\n * const scene = new Scene()\n * const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new ThreeDOFControls(cameraRig)\n *\n * controls.enable()\n *\n * // render loop\n * function animate(t) {\n *  controls.update(t)\n * }\n * ```\n */\nexport class ThreeDOFControls implements BaseControls {\n  readonly cameraRig: CameraRig\n  private pointerAdaptor: PointerAdaptor\n  private enabled = false\n  private panFactor: number\n  private tiltFactor: number\n  private truckFactor: number\n  private pedestalFactor: number\n\n  constructor(cameraRig: CameraRig, props: ThreeDOFControlsProps = {}) {\n    this.cameraRig = cameraRig\n    Object.assign(this, defaultProps, props)\n    this.pointerAdaptor = new PointerAdaptor({\n      domElement: props.domElement || defaultProps.domElement,\n      dampingFactor: props.dampingFactor || defaultProps.dampingFactor,\n    })\n    this.onPointerMove = this.onPointerMove.bind(this)\n  }\n\n  isEnabled(): boolean {\n    return this.enabled\n  }\n\n  enable(): void {\n    this.pointerAdaptor.connect()\n    this.pointerAdaptor.addEventListener('update', this.onPointerMove)\n    this.enabled = true\n  }\n\n  disable(): void {\n    this.pointerAdaptor.disconnect()\n    this.pointerAdaptor.removeEventListener('update', this.onPointerMove)\n    this.enabled = false\n  }\n\n  update(time: number): void {\n    if (this.enabled) {\n      this.pointerAdaptor.update(time)\n    }\n  }\n\n  private onPointerMove(event): void {\n    if (event.pointerCount === 0) {\n      this.cameraRig.do(CameraAction.Pan, -event.deltas.x * this.panFactor, RigComponent.Eyes)\n      this.cameraRig.do(CameraAction.Tilt, -event.deltas.y * this.tiltFactor, RigComponent.Eyes)\n      this.cameraRig.do(CameraAction.Truck, event.deltas.x * this.truckFactor, RigComponent.Eyes)\n      this.cameraRig.do(CameraAction.Pedestal, event.deltas.y * this.pedestalFactor, RigComponent.Eyes)\n    }\n  }\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { Quaternion, Vector3, AnimationClip, VectorKeyframeTrack, QuaternionKeyframeTrack } from 'three'\nimport gsap from 'gsap'\nimport { CameraRig } from '../CameraRig'\nimport { FreeMovementControls } from '../controlschemes/FreeMovementControls'\nimport './index.css'\n\nconst easeFunctions = ['none', 'power1', 'power2', 'power3', 'power4', 'sine', 'expo', 'circ']\n\ninterface POI {\n  position: Vector3\n  quaternion: Quaternion\n  duration: number\n  ease: string\n  image: string\n}\n\nconst DOMClass = {\n  visit: 'visit',\n  remove: 'remove',\n  duration: 'duration',\n  ease: 'ease',\n  moveUp: 'move-up',\n  moveDown: 'move-down',\n}\n\n/**\n * A helper tool for creating camera animation paths and/or choosing camera look-at positions for points of interest in a scene\n *\n * @remarks\n * A helper tool for creating camera animation paths and/or choosing camera look-at positions for points of interest in a scene.\n *\n * The `CameraHelper` can be set up with any scene along with {@link three-story-controls#FreeMovementControls | FreeMovementControls}.\n *\n * It renders as an overlay with functionality to add/remove/reorders points of interest, and create an animation path between them.\n *  Each saved camera position is displayed with an image on the `CameraHelper` panel.\n *\n * The data can be exported as a JSON file that can then be used with different control schemes.\n *\n * {@link https://nytimes.github.io/three-story-controls/examples/demos/camera-helper | DEMO }\n *\n * @example\n * Here's an example of initializing the CameraHelper\n * ```js\n * const scene = new Scene()\n * const camera = new PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000)\n * const cameraRig = new CameraRig(camera, scene)\n * const controls = new FreeMovementControls(cameraRig)\n *\n * controls.enable()\n *\n * const cameraHelper = new CameraHelper(rig, controls, renderer.domElement)\n *\n * // Render loop\n * // To allow for capturing an image of the canvas,\n * // it's important to update the CameraHelper after the scene is rendered,\n * // but before requesting the animation frame\n * function render(t) {\n *   controls.update(t)\n *   renderer.render(scene, camera)\n *   cameraHelper.update(t)\n *   window.requestAnimationFrame(render)\n * }\n *\n * render()\n * ```\n *\n *\n *\n * The following examples demonstrate using the exported data. Note: Depending on your setup, you may need to change the .json extension to .js and prepend the text with `export default` such that you can import it as javascript\n *\n * @example\n * Here's an example using the exported JSON data with ScrollControls.\n * ```javascript\n * import * as cameraData from 'camera-control.json'\n * const scene = new Scene()\n * const gltfLoader = new GLTFLoader()\n * const camera = new PerspectiveCamera()\n * const cameraRig = new CameraRig(camera, scene)\n *\n * // Parse the JSON animation clip\n * cameraRig.setAnimationClip(AnimationClip.parse(cameraData.animationClip))\n * cameraRig.setAnimationTime(0)\n *\n * const controls = new ScrollControls(cameraRig, {\n *  scrollElement: document.querySelector('.scroller'),\n * })\n *\n * controls.enable()\n *\n * function render(t) {\n *   window.requestAnimationFrame(render)\n *   if (rig.hasAnimation) {\n *     controls.update(t)\n *   }\n *   renderer.render(scene, camera)\n * }\n * ```\n *\n * @example\n * Here's an example using the exported data with Story Point controls\n * ```javascript\n * import * as cameraData from 'camera-control.json'\n * const scene = new Scene()\n * const gltfLoader = new GLTFLoader()\n * const camera = new PerspectiveCamera()\n * const cameraRig = new CameraRig(camera, scene)\n *\n * // Format the exported data to create three.js Vector and Quaternions\n * const pois = cameraData.pois.map((poi, i) => {\n *   return {\n *     position: new Vector3(...poi.position),\n *     quaternion: new Quaternion(...poi.quaternion),\n *     duration: poi.duration,\n *     ease: poi.ease,\n *   }\n * })\n *\n * const controls = new StoryPointsControls(rig, pois)\n * controls.enable()\n *\n * function render(t) {\n *   window.requestAnimationFrame(render)\n *   controls.update(t)\n *   renderer.render(scene, camera)\n * }\n * ```\n */\nexport class CameraHelper {\n  readonly rig: CameraRig\n  readonly controls: FreeMovementControls\n  readonly canvas: HTMLCanvasElement\n  private pois: POI[]\n  private currentIndex: number | null\n  private drawer: HTMLElement\n  private domList: HTMLElement\n  private collapseBtn: HTMLElement\n  private fileInput: HTMLInputElement\n  private btnImport: HTMLElement\n  private doCapture: boolean\n  private animationClip: AnimationClip\n  private isPlaying: boolean\n  private playStartTime: number\n  private useSlerp = true\n\n  constructor(rig: CameraRig, controls: FreeMovementControls, canvas: HTMLCanvasElement, canvasParent?: HTMLElement) {\n    this.rig = rig\n    this.controls = controls\n    this.canvas = canvas\n    this.pois = []\n    this.currentIndex = null\n    this.doCapture = false\n    this.isPlaying = false\n    this.initUI(canvasParent)\n  }\n\n  private capture(): void {\n    this.doCapture = true\n  }\n\n  update(time: number): void {\n    if (this.doCapture) {\n      const canvas = document.createElement('canvas')\n      const ctx = canvas.getContext('2d')\n      canvas.width = 640\n      canvas.height = 360\n      ctx.drawImage(this.canvas, 0, 0, canvas.width, canvas.height)\n      const image = canvas.toDataURL()\n\n      this.addPoi(image)\n      this.doCapture = false\n    }\n    if (this.isPlaying) {\n      if (!this.playStartTime) {\n        this.playStartTime = time\n        this.controls.disable()\n        this.rig.packTransform()\n      }\n      const t = (time - this.playStartTime) / 1000\n      this.rig.setAnimationTime(t)\n      if (t > this.animationClip.duration) {\n        this.isPlaying = false\n        this.playStartTime = null\n        this.controls.enable()\n        this.rig.unpackTransform()\n      }\n    }\n  }\n\n  private addPoi(image: string): void {\n    this.pois.push({\n      ...this.rig.getWorldCoordinates(),\n      duration: 1,\n      ease: 'power1',\n      image,\n    })\n    this.currentIndex = this.pois.length - 1\n    this.createClip()\n    this.render()\n  }\n\n  private updatePoi(index: number, props: Partial<POI>): void {\n    this.pois[index] = {\n      ...this.pois[index],\n      ...props,\n    }\n  }\n\n  private movePoi(index: number, direction: number): void {\n    if (index + direction >= 0 && index + direction < this.pois.length) {\n      const temp = this.pois[index]\n      this.pois[index] = this.pois[index + direction]\n      this.pois[index + direction] = temp\n      this.render()\n    }\n  }\n\n  private removePoi(index: number): void {\n    this.pois.splice(index, 1)\n    this.render()\n  }\n\n  private goToPoi(index: number): void {\n    const poi = this.pois[index]\n    this.rig.flyTo(poi.position, poi.quaternion, poi.duration, poi.ease, this.useSlerp)\n  }\n\n  private createClip(): void {\n    if (this.pois.length > 0) {\n      const times = []\n      const positionValues = []\n      const quaternionValues = []\n      const tmpPosition = new Vector3()\n      const tmpQuaternion = new Quaternion()\n      const framesPerPoi = 10\n\n      let tweenStartTime = 0\n\n      // transform imported arrays to quaternions and vector3 when loading a camera file\n      if (!this.pois[0].quaternion.isQuaternion && !this.pois[0].position.isVector3) {\n        for (let i = 0; i < this.pois.length; i++) {\n          const p = this.pois[i]\n          p.quaternion = new Quaternion(p.quaternion[0], p.quaternion[1], p.quaternion[2], p.quaternion[3])\n          p.position = new Vector3(p.position[0], p.position[1], p.position[2])\n        }\n      }\n\n      for (let i = 0; i < this.pois.length - 1; i++) {\n        const p1 = this.pois[i]\n        const p2 = this.pois[i + 1]\n\n        const values = {\n          px: p1.position.x,\n          py: p1.position.y,\n          pz: p1.position.z,\n          qx: p1.quaternion.x,\n          qy: p1.quaternion.y,\n          qz: p1.quaternion.z,\n          qw: p1.quaternion.w,\n          slerpAmount: 0,\n        }\n\n        const target = {\n          px: p2.position.x,\n          py: p2.position.y,\n          pz: p2.position.z,\n          qx: p2.quaternion.x,\n          qy: p2.quaternion.y,\n          qz: p2.quaternion.z,\n          qw: p2.quaternion.w,\n          slerpAmount: 1,\n          duration: p2.duration,\n          ease: p2.ease,\n        }\n\n        const tween = gsap.to(values, target)\n\n        for (let j = 0; j < framesPerPoi; j++) {\n          const lerpAmount = p2.duration * (j / framesPerPoi)\n          times.push(tweenStartTime + lerpAmount)\n          tween.seek(lerpAmount)\n          if (this.useSlerp) {\n            tmpQuaternion.slerpQuaternions(p1.quaternion, p2.quaternion, values.slerpAmount)\n          } else {\n            tmpQuaternion.set(values.qx, values.qy, values.qz, values.qw)\n          }\n          tmpPosition.set(values.px, values.py, values.pz)\n          tmpQuaternion.toArray(quaternionValues, quaternionValues.length)\n          tmpPosition.toArray(positionValues, positionValues.length)\n        }\n        tweenStartTime += p2.duration\n      }\n      // add last point\n      const last = this.pois[this.pois.length - 1]\n      last.quaternion.toArray(quaternionValues, quaternionValues.length)\n      last.position.toArray(positionValues, positionValues.length)\n      times.push(tweenStartTime)\n      this.animationClip = new AnimationClip(null, tweenStartTime, [\n        new VectorKeyframeTrack('Translation.position', times, positionValues),\n        new QuaternionKeyframeTrack('Rotation.quaternion', times, quaternionValues),\n      ])\n      this.rig.setAnimationClip(this.animationClip)\n    }\n  }\n\n  private scrubClip(amount: number): void {\n    if (this.pois.length > 0) {\n      this.rig.setAnimationPercentage(amount)\n    }\n  }\n\n  private playClip(): void {\n    if (this.pois.length > 0) {\n      this.isPlaying = true\n    }\n  }\n\n  private import(): void {\n    if (this.fileInput) {\n      this.fileInput.click()\n      const reader = new FileReader()\n\n      this.fileInput.onchange = () => {\n        reader.readAsText(this.fileInput.files[0])\n        reader.onload = (e) => {\n          const parsed = JSON.parse(<string>e.target.result)\n          this.pois = parsed.pois\n          this.animationClip = parsed.animationClip\n          this.createClip()\n          this.render()\n        }\n      }\n    }\n  }\n\n  private export({ draft }): void {\n    if (this.pois.length > 0) {\n      const jsondata = {} as any\n      jsondata.pois = this.pois.map((poi) => {\n        const position = [poi.position.x, poi.position.y, poi.position.z]\n        const quaternion = [poi.quaternion.x, poi.quaternion.y, poi.quaternion.z, poi.quaternion.w]\n        const obj = {\n          position,\n          quaternion,\n          duration: poi.duration,\n          ease: poi.ease,\n        } as any\n\n        if (draft) {\n          obj.image = poi.image\n        }\n\n        return obj\n      })\n      if (this.animationClip) {\n        jsondata.animationClip = AnimationClip.toJSON(this.animationClip)\n      }\n      const data = 'text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(jsondata))\n      const a = document.createElement('a')\n      a.href = 'data:' + data\n      a.download = `camera-data${draft ? '-draft' : ''}.json`\n      document.body.appendChild(a)\n      a.click()\n      a.remove()\n    }\n  }\n\n  private exportImages(): void {\n    const link = document.createElement('a')\n    document.body.appendChild(link)\n    this.pois.forEach((poi, index) => {\n      link.href = poi.image\n      link.download = `camera-poi-${index}.png`\n      link.click()\n    })\n    link.remove()\n  }\n\n  // ui\n\n  private initUI(canvasParent?: HTMLElement): void {\n    this.drawer = document.createElement('div')\n    this.drawer.classList.add('tb-ch')\n\n    const btnAdd = document.createElement('button')\n    btnAdd.classList.add('btn-round', 'add')\n    btnAdd.innerText = '+'\n    btnAdd.onclick = this.capture.bind(this)\n\n    this.collapseBtn = document.createElement('button')\n    this.collapseBtn.classList.add('btn-round', 'collapse')\n    this.collapseBtn.innerText = '<'\n    this.collapseBtn.onclick = this.collapse.bind(this)\n\n    const controlWrapper = document.createElement('div')\n    controlWrapper.classList.add('controls')\n\n    this.fileInput = document.createElement('input')\n    this.fileInput.type = 'file'\n    this.fileInput.id = 'import'\n    this.fileInput.accept = 'application/json'\n    this.fileInput.style.display = 'none'\n\n    this.btnImport = document.createElement('button')\n    this.btnImport.classList.add('btn-text', 'import')\n    this.btnImport.innerText = 'import draft JSON'\n    this.btnImport.onclick = this.import.bind(this)\n\n    const btnExportImages = document.createElement('button')\n    btnExportImages.classList.add('btn-text', 'export')\n    btnExportImages.innerText = 'export draft JSON'\n    btnExportImages.onclick = this.export.bind(this, { draft: true })\n\n    const btnExport = document.createElement('button')\n    btnExport.classList.add('btn-text', 'export')\n    btnExport.innerText = 'export production JSON'\n    btnExport.onclick = this.export.bind(this, { draft: false })\n\n    const bntExportImages = document.createElement('button')\n    bntExportImages.classList.add('btn-text', 'export-images')\n    bntExportImages.innerHTML = 'export images'\n    bntExportImages.onclick = this.exportImages.bind(this)\n\n    const btnPlay = document.createElement('button')\n    btnPlay.classList.add('btn-text', 'play')\n    btnPlay.innerText = 'play'\n    btnPlay.onclick = this.playClip.bind(this)\n\n    const sliderTime: HTMLInputElement = document.createElement('input')\n    sliderTime.type = 'range'\n    sliderTime.min = '0'\n    sliderTime.max = '1000'\n    sliderTime.step = '0.1'\n    sliderTime.value = '0'\n    const updateTime = this.scrubClip.bind(this)\n    sliderTime.onmousedown = () => this.rig.packTransform()\n    sliderTime.onmouseup = () => this.rig.unpackTransform()\n    sliderTime.oninput = (e) => updateTime(parseInt((<HTMLInputElement>e.target).value) / 1000)\n\n    this.domList = document.createElement('div')\n    this.domList.classList.add('pois')\n    this.domList.onclick = this.handleEvents.bind(this)\n    this.domList.onchange = this.handleEvents.bind(this)\n\n    controlWrapper.append(\n      this.fileInput,\n      this.btnImport,\n      btnPlay,\n      sliderTime,\n      bntExportImages,\n      btnExportImages,\n      btnExport,\n    )\n    this.drawer.append(btnAdd, this.collapseBtn, this.domList, controlWrapper)\n\n    const parent = canvasParent || document.body\n    parent.append(this.drawer)\n  }\n\n  private handleEvents(event): void {\n    const index = event.target.dataset.index\n    if (index) {\n      if (event.target.classList.contains(DOMClass.visit)) {\n        this.goToPoi(parseInt(index))\n      } else if (event.target.classList.contains(DOMClass.remove)) {\n        this.removePoi(parseInt(index))\n      } else if (event.target.classList.contains(DOMClass.duration)) {\n        this.updatePoi(parseInt(index), { duration: parseFloat((<HTMLInputElement>event.target).value) })\n      } else if (event.target.classList.contains(DOMClass.ease)) {\n        this.updatePoi(parseInt(index), { ease: (<HTMLSelectElement>event.target).value })\n      } else if (event.target.classList.contains(DOMClass.moveUp)) {\n        this.movePoi(parseInt(index), -1)\n      } else if (event.target.classList.contains(DOMClass.moveDown)) {\n        this.movePoi(parseInt(index), 1)\n      }\n      this.createClip()\n    }\n  }\n\n  private collapse(): void {\n    if (this.drawer.classList.contains('collapsed')) {\n      this.drawer.classList.remove('collapsed')\n      this.collapseBtn.innerText = '<'\n    } else {\n      this.drawer.classList.add('collapsed')\n      this.collapseBtn.innerText = '>'\n    }\n  }\n\n  private render(): void {\n    this.domList.innerHTML = ''\n    this.pois.forEach((poi, index) => {\n      const div = document.createElement('div')\n      div.classList.add('poi')\n\n      const textHeading = document.createElement('h2')\n      textHeading.innerText = `${index + 1}.`\n\n      const wrapper = document.createElement('div')\n      wrapper.classList.add('wrapper')\n      const controls = document.createElement('div')\n      controls.classList.add('poi-controls')\n      const params = document.createElement('div')\n      params.classList.add('poi-params')\n\n      const image = new Image()\n      image.src = poi.image\n\n      const labelDuration = document.createElement('label')\n      labelDuration.innerText = 'Duration'\n      const inputDuration = document.createElement('input')\n      inputDuration.classList.add(DOMClass.duration)\n      inputDuration.dataset.index = `${index}`\n      inputDuration.type = 'number'\n      inputDuration.value = String(poi.duration)\n\n      const labelEase = document.createElement('label')\n      labelEase.innerText = 'Easing'\n      const selectEase = document.createElement('select')\n      selectEase.classList.add(DOMClass.ease)\n      selectEase.dataset.index = `${index}`\n      const options = easeFunctions.map((x) => {\n        const op = document.createElement('option')\n        op.innerText = x\n        op.value = x\n        op.selected = x === poi.ease\n        return op\n      })\n      selectEase.append(...options)\n\n      const btnRemove = document.createElement('button')\n      btnRemove.classList.add(DOMClass.remove)\n      btnRemove.title = 'Remove'\n      btnRemove.dataset.index = `${index}`\n      btnRemove.innerText = 'x'\n\n      const btnVisit = document.createElement('button')\n      btnVisit.classList.add(DOMClass.visit)\n      btnVisit.title = 'Visit'\n      btnVisit.dataset.index = `${index}`\n      btnVisit.innerHTML = '&rarr;'\n\n      const btnMoveUp = document.createElement('button')\n      btnMoveUp.classList.add(DOMClass.moveUp)\n      btnMoveUp.title = 'Move up'\n      btnMoveUp.dataset.index = `${index}`\n      btnMoveUp.innerHTML = '&uarr;'\n\n      const btnMoveDown = document.createElement('button')\n      btnMoveDown.classList.add(DOMClass.moveDown)\n      btnMoveDown.title = 'Move down'\n      btnMoveDown.dataset.index = `${index}`\n      btnMoveDown.innerHTML = '&darr;'\n\n      controls.append(btnRemove, btnVisit, btnMoveUp, btnMoveDown)\n      params.append(labelDuration, inputDuration, labelEase, selectEase)\n      wrapper.append(image, controls)\n      div.append(textHeading, wrapper, params)\n      this.domList.appendChild(div)\n    })\n  }\n}\n"],"names":["Damper","constructor","props","this","Object","assign","values","targetValues","deltaValues","key","dampingFactor","epsilon","hasReached","update","deltas","approached","Math","abs","setTarget","target","addToTarget","value","resetAll","resetData","getCurrentValues","getDeltaValues","reachedTarget","CameraAction","RigComponent","Axis","AxisVector","X","Vector3","Y","Z","ActionMappingByUpAxis","Pan","Tilt","Roll","CameraRig","EventDispatcher","camera","scene","super","upAxis","body","Object3D","head","eyes","name","animationRotationObjectName","animationTranslationObjectName","rotation","order","getRotationOrder","add","cameraIsInRig","unpackTransform","getAxisFor","action","actionAxes","getAxisVectorFor","do","amount","rigComponent","targetComponent","axis","rotateOnAxis","translateAlong","Truck","translateOnAxis","Pedestal","Dolly","Zoom","PerspectiveCamera","fov","updateProjectionMatrix","getWorldCoordinates","position","getWorldPosition","quaternion","Quaternion","getWorldQuaternion","setWorldCoordinates","currentRotation","Euler","setFromQuaternion","actions","set","copy","forEach","packTransform","disassemble","attach","assemble","join","toUpperCase","isInRig","isMoving","inTransit","setUpAxis","setAnimationClip","clip","translationObjectName","rotationObjectName","animationClip","hasAnimation","duration","mixer","AnimationMixer","clipAction","clampWhenFinished","play","flyTo","ease","useSlerp","currentCoords","currentValues","px","x","py","y","pz","z","qx","qy","qz","qw","w","slerpAmt","tempQuaternion","startQuaternion","onStart","dispatchEvent","type","onUpdate","tween","slerpQuaternions","setRotationFromQuaternion","progress","onComplete","gsap","to","flyToKeyframe","frame","time","tracks","times","setTime","setAnimationPercentage","percentage","percent","max","min","setAnimationTime","setAnimationKeyframe","BaseAdaptor","defaultProps","keyMapping","forward","backward","left","right","up","down","incrementor","preventBubbling","KeyboardAdaptor","damper","onKeyUp","bind","onKeyDown","connect","document","addEventListener","connected","disconnect","removeEventListener","isEnabled","event","includes","preventDefault","trigger","domElement","shouldNormalize","normalizeAroundZero","multipointerThreshold","PointerAdaptor","setDimensions","onPointerMove","onPointerUp","onPointerDown","onResize","passive","window","pointerCount","cache","length","lastDownTime","lastUpTime","recordedPosition","getPointerPosition","normalize","width","getBoundingClientRect","height","offsetLeft","offsetTop","aroundZero","pointerId","button","push","performance","now","i","splice","startOffset","endOffset","buffer","ScrollAdaptor","lastSeenScrollValue","scrollY","previousScrollValue","scrollPx","scrollPercent","calculateDimensions","onScroll","resizeObserver","ResizeObserver","observe","unobserve","bufferedStartPosition","bufferedEndPosition","distance","startPosition","dampenedValues","parseOffset","offset","parseInt","indexOf","innerHeight","calculateOffset","element","offsetParent","elementHeight","scrollElement","clientHeight","endPosition","thresholdX","thresholdY","SwipeAdaptor","pointerType","isPrimary","startX","screenX","startY","screenY","diffX","diffY","sign","debounceDuration","WheelAdaptor","onWheel","deltaX","deltaY","lastThresholdTrigger","pointerDampFactor","pointerScaleFactor","keyboardDampFactor","keyboardScaleFactor","wheelDampFactor","wheelScaleFactor","panDegreeFactor","PI","tiltDegreeFactor","FreeMovementControls","cameraRig","keyboardAdaptor","wheelAdaptor","pointerAdaptor","onKey","onPointer","enabled","enable","disable","cameraStart","cameraEnd","scrollActions","mapRange","number","inMin","inMax","outMin","outMax","ScrollControls","scrollAdaptor","calculateStops","cameraStartPx","cameraEndPx","cameraBufferedStartPx","cameraBufferedEndPx","startPx","start","endPx","end","bufferedStartPx","bufferedEndPx","callback","cycle","useKeyboard","StoryPointsControls","pois","next","prev","onCameraStart","onCameraUpdate","onCameraEnd","getCurrentIndex","currentIndex","nextPOI","exitFrom","goToPOI","prevPOI","index","upcomingIndex","poi","updatePois","wheelThreshold","swipeThreshold","PathPointsControls","swipeAdaptor","onTrigger","panFactor","tiltFactor","truckFactor","pedestalFactor","ThreeDOFControls","Eyes","css","ref","insertAt","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","easeFunctions","DOMClass","CameraHelper","rig","controls","canvas","canvasParent","doCapture","isPlaying","initUI","capture","ctx","getContext","drawImage","image","toDataURL","addPoi","playStartTime","t","createClip","render","updatePoi","movePoi","direction","temp","removePoi","goToPoi","positionValues","quaternionValues","tmpPosition","tmpQuaternion","framesPerPoi","tweenStartTime","isQuaternion","isVector3","p","p1","p2","slerpAmount","j","lerpAmount","seek","toArray","last","AnimationClip","VectorKeyframeTrack","QuaternionKeyframeTrack","scrubClip","playClip","import","fileInput","click","reader","FileReader","onchange","readAsText","files","onload","e","parsed","JSON","parse","result","export","draft","jsondata","map","obj","toJSON","data","encodeURIComponent","stringify","a","href","download","remove","exportImages","link","drawer","classList","btnAdd","innerText","onclick","collapseBtn","collapse","controlWrapper","id","accept","display","btnImport","btnExportImages","btnExport","bntExportImages","innerHTML","btnPlay","sliderTime","step","updateTime","onmousedown","onmouseup","oninput","domList","handleEvents","append","dataset","contains","parseFloat","div","textHeading","wrapper","params","Image","src","labelDuration","inputDuration","String","labelEase","selectEase","options","op","selected","btnRemove","title","btnVisit","btnMoveUp","btnMoveDown"],"mappings":"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"}